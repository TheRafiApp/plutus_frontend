{"version":3,"sources":["view/account/Company.js"],"names":["define","app","CompanyModel","ManagersCollection","Template","Backbone","View","extend","className","template","_","initialize","options","this","bind","refreshAccount","self","account_model","parentModel","promises","utils","company_id","get","company_model","_id","fetch","then","resolve","managers_collection","$","when","apply","render","$el","html","user","toJSON","company","managers","delegateEvents","find","chosen"],"mappings":"AAIAA,QACE,MACA,+BACA,sCACA,+CAEF,SAASC,EAAKC,EAAcC,EAAoBC,GAE9C,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,0BAEXC,SAAUC,EAAED,SAASL,GAErBO,WAAY,SAASC,GACfA,GAASF,EAAEH,OAAOM,KAAMD,GAE5BC,KAAKC,KAAK,cAAeD,KAAKE,eAAgBF,KAC9C,IAAIG,GAAOH,IAEXA,MAAKI,cAAgBJ,KAAKK,WAG1B,IAAIC,GAAWlB,EAAImB,MAAMD,SAAS,GAE9BE,EAAaR,KAAKI,cAAcK,IAAI,cACxCT,MAAKU,cAAgB,GAAIrB,IAAesB,IAAKH,IAC7CR,KAAKU,cAAcE,QAAQC,KAAK,WAC9BP,EAAS,GAAGQ,YAGdd,KAAKe,oBAAsB,GAAIzB,GAC/BU,KAAKe,oBAAoBH,QAAQC,KAAK,WACpCP,EAAS,GAAGQ,YAGdE,EAAEC,KAAKC,MAAMF,EAAGV,GAAUO,KAAK,WAC7BV,EAAKgB,YAITA,OAAQ,WAYN,MAVAnB,MAAKoB,IAAIC,KAAKrB,KAAKJ,UACjB0B,KAAMtB,KAAKI,cAAcmB,SACzBC,QAASxB,KAAKU,cAAca,SAC5BE,SAAUzB,KAAKe,oBAAoBQ,YAGrCvB,KAAK0B,iBAEL1B,KAAKoB,IAAIO,KAAK,WAAWC,SAElB5B","file":"Company.js","sourcesContent":["/**\n * account/Company.js\n */\n\ndefine([\n  'app',\n  'model/companies/CompanyModel',\n  'collection/users/ManagersCollection',\n  'text!templates/account/account-company.html',\n],\nfunction(app, CompanyModel, ManagersCollection, Template) {\n\n  return Backbone.View.extend({\n\n    className: 'account account-company',\n\n    template: _.template(Template),\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n\n      this.bind('hardConfirm', this.refreshAccount, this);\n      var self = this;\n\n      this.account_model = this.parentModel;\n\n      // var promises = [$.Deferred(), $.Deferred()];\n      var promises = app.utils.promises(2);\n\n      var company_id = this.account_model.get('company._id');\n      this.company_model = new CompanyModel({ _id: company_id });\n      this.company_model.fetch().then(function() {\n        promises[0].resolve();\n      });\n\n      this.managers_collection = new ManagersCollection();\n      this.managers_collection.fetch().then(function() {\n        promises[1].resolve();\n      });\n\n      $.when.apply($, promises).then(function() {\n        self.render();\n      });\n    },\n\n    render: function() {\n\n      this.$el.html(this.template({\n        user: this.account_model.toJSON(),\n        company: this.company_model.toJSON(),\n        managers: this.managers_collection.toJSON(),\n      }));\n\n      this.delegateEvents();\n\n      this.$el.find('.chosen').chosen();\n\n      return this;\n    }\n\n  });\n});\n"]}