{"version":3,"sources":["view/dashboard/tenant.js"],"names":["define","app","BillsView","HeaderTemplate","Backbone","View","extend","className","events","click .tabs a","initialize","options","_","this","views","currentView","template_container","template","render","$el","html","loadView","self","page","firstLoad","subPage","find","removeClass","addClass","file","utils","capitalize","get","then","tab","parentModel","model","currentTab","delegateEvents","modelView","router","navigate","trigger","replace","fail","e","toggleTab","$","currentTarget","attr"],"mappings":"AAIAA,QACE,MACA,qBACA,4CAEF,SAASC,EAAKC,EAAWC,GAEvB,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,kBAEXC,QACEC,gBAAiB,aAGnBC,WAAY,SAASC,GACfA,GAASC,EAAEN,OAAOO,KAAMF,EAG5BV,GAAIa,MAAMC,YAAcF,KAExBA,KAAKG,mBAAqBJ,EAAEK,SAASd,GAErCU,KAAKK,UAGPA,OAAQ,WAIN,MAHAL,MAAKM,IAAIC,KAAKP,KAAKG,sBACnBH,KAAKQ,WAEER,MAGTQ,SAAU,WACR,GAAIC,GAAOT,KACPU,EAAO,UACPC,GAAY,CAEZX,MAAKY,UACPF,EAAOV,KAAKY,QACZD,GAAY,EACZX,KAAKM,IAAIO,KAAK,WAAWC,YAAY,UACrCd,KAAKM,IAAIO,KAAK,qBAAuBH,EAAO,MAAMK,SAAS,WAI7DC,KAAO5B,EAAI6B,MAAMC,WAAWR,GAE5BtB,EAAI6B,MAAMT,SAASW,IAAI,SAAWH,MAAMI,KAAK,SAAS5B,GACpD,GAAI6B,GAAM,GAAI7B,IACZ8B,YAAab,EAAKc,OAGpBnC,GAAIa,MAAMC,YAAYsB,WAAaH,EAEnCZ,EAAKH,IAAIO,KAAK,eAAeN,KAAKc,EAAIf,KACtCe,EAAII,iBAEArC,EAAIa,MAAMyB,YAGdtC,EAAIuC,OAAOC,SAAS,aAAelB,GAAQmB,SAAS,EAAOC,QAASnB,IACpEvB,EAAIuC,OAAOE,QAAQ,YAElBE,KAAK,SAASC,GACf5C,EAAIuC,OAAOC,SAAS,OAASC,SAAS,EAAMC,SAAS,OAIzDG,UAAW,SAASD,GAClB,GAAItB,GAAOwB,EAAEF,EAAEG,eAAeC,KAAK,WAEnCpC,MAAKY,QAAUF,EACfV,KAAKQ","file":"tenant.js","sourcesContent":["/**\n * dashboard/tenant.js\n */\n\ndefine([\n  'app',\n  'view/bills/Current',\n  'text!templates/headers/header-bills.html'\n],\nfunction(app, BillsView, HeaderTemplate) {\n\n  return Backbone.View.extend({\n\n    className: 'tabs-view panel',\n\n    events: {\n      'click .tabs a': 'toggleTab'\n    },\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n\n      var self = this;\n      app.views.currentView = this;\n\n      this.template_container = _.template(HeaderTemplate);\n\n      this.render();\n    },\n\n    render: function() {\n      this.$el.html(this.template_container());\n      this.loadView();\n\n      return this;\n    },\n\n    loadView: function() {\n      var self = this;\n      var page = 'current';\n      var firstLoad = true;\n\n      if (this.subPage) {\n        page = this.subPage;\n        firstLoad = false;\n        this.$el.find('.tabs a').removeClass('active');\n        this.$el.find('.tabs a[data-tab=\"' + page + '\"]').addClass('active');\n      }\n\n      // files are case sensitive on Linux HD formatting :P\n      file = app.utils.capitalize(page);\n\n      app.utils.loadView.get('bills/' + file).then(function(View) {\n        var tab = new View({\n          parentModel: self.model\n        });\n\n        app.views.currentView.currentTab = tab;\n        \n        self.$el.find('.bills-view').html(tab.$el);\n        tab.delegateEvents();\n        \n        if (app.views.modelView) return;\n\n        // pass trigger: false to avoid the entire view from re-rendering\n        app.router.navigate('dashboard/' + page, { trigger: false, replace: firstLoad });\n        app.router.trigger('route');\n\n      }).fail(function(e) {\n        app.router.navigate('404', { trigger: true, replace: true });\n      });\n    },\n\n    toggleTab: function(e) {\n      var page = $(e.currentTarget).attr('data-tab');\n      \n      this.subPage = page;\n      this.loadView();\n    }\n    \n  });\n});"]}