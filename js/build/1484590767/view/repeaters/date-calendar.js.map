{"version":3,"sources":["view/repeaters/date-calendar.js"],"names":["define","app","kalendae","DateTemplate","Backbone","View","extend","template","_","initialize","options","this","render","self","$el","html","name","$date_field","find","date","Kalendae","months","selected","moment","subscribe","populateDate","getSelectedRaw","format","val","emitChange","e","context","trigger"],"mappings":"AAIAA,QACE,MACA,WACA,+CAEF,SAASC,EAAKC,EAAUC,GAEtB,MAAOC,UAASC,KAAKC,QAEnBC,SAAUC,EAAED,SAASJ,GAIrBM,WAAY,SAASC,GACnBF,EAAEF,OAAOK,KAAMD,GACfC,KAAKC,UAGPA,OAAQ,WACN,GAAIC,GAAOF,IAEXA,MAAKG,IAAIC,KAAKJ,KAAKJ,UACjBS,KAAML,KAAKK,OAGb,IAAIC,GAAcN,KAAKG,IAAII,KAAK,sBAiBhC,OAbAP,MAAKQ,KAAO,GAAIC,UAASH,EAAY,IACnCI,OAAQ,EACRC,SAAUC,WAKZZ,KAAKQ,KAAKK,UAAU,SAAW,SAASL,GACtCN,EAAKY,aAAaN,KAGpBR,KAAKc,eAEEd,MAGTc,aAAc,SAASN,GAIrB,MAHKA,KAAMA,EAAOR,KAAKQ,KAAKO,iBAAiB,GAAGC,OAAO,eACvDhB,KAAKG,IAAII,KAAK,eAAeU,IAAIT,GACjCR,KAAKkB,aACElB,MAGTkB,WAAY,SAASC,GACnBnB,KAAKoB,QAAQC,QAAQ","file":"date-calendar.js","sourcesContent":["/**\n * /repeaters/date-calendar.js\n */\n\ndefine([\n  'app',\n  'kalendae',\n  'text!templates/repeaters/date-calendar.html',\n],\nfunction(app, kalendae, DateTemplate) {\n\n  return Backbone.View.extend({\n\n    template: _.template(DateTemplate),\n\n    // TODO: allow setting date in options\n    \n    initialize: function(options) {\n      _.extend(this, options);\n      this.render();\n    },\n\n    render: function() {\n      var self = this;\n\n      this.$el.html(this.template({\n        name: this.name\n      }));\n\n      var $date_field = this.$el.find('.calendar-container');\n\n      // Init Kalendae\n\n      this.date = new Kalendae($date_field[0], {\n        months: 1,\n        selected: moment()\n      });\n\n      // Kalendae events\n\n      this.date.subscribe('change' , function(date) {\n        self.populateDate(date);\n      });\n\n      this.populateDate();\n\n      return this;\n    },\n\n    populateDate: function(date) {\n      if (!date) date = this.date.getSelectedRaw()[0].format('MM/DD/YYYY');\n      this.$el.find('.date-input').val(date);\n      this.emitChange();\n      return this;\n    },\n\n    emitChange: function(e) {\n      this.context.trigger('dateChange');\n    }\n    \n  });\n});"]}