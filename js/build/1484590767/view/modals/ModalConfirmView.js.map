{"version":3,"sources":["view/modals/ModalConfirmView.js"],"names":["define","AccountModel","ModalConfirmTemplate","Backbone","View","extend","events","click .action-confirm","click .action-cancel","click .overlay","keyup","template","_","keyControl","e","which","this","closeModal","app","utils","getFocused","parentNode","className","contains","confirm","initialize","_options","model","context","views","appView","trigger","modalView","render","dialogue","message","self","data_summary","Object","keys","data","map","key","index","array","length","join","$el","html","warning","$","addClass","find","focus","delegateEvents","tenant","leases","name","removeClass","close","refuse","controls","modalShake","$confirm","is","fieldError","element","type","error","$pw","pw","val","session","tokens","pass","method","then","fail","responseJSON"],"mappings":"AAIAA,QAEE,6BACA,4CAEF,SAEEC,EACAC,GAGA,MAAOC,UAASC,KAAKC,QAEnBC,QACEC,wBAAyB,UACzBC,uBAAwB,aACxBC,iBAAkB,aAClBC,MAAS,cAGXC,SAAUC,EAAED,SAAST,GAErBW,WAAY,SAASC,GAGnB,GAAgB,KAAZA,EAAEC,MACJC,KAAKC,iBAEA,IAAgB,KAAZH,EAAEC,MAAc,CACzB,GAAIC,KAAKE,IAAIC,MAAMC,aAAaC,WAAWC,UAAUC,SAAS,WAAY,MAC1EP,MAAKQ,YAITC,WAAY,SAASC,GACfA,GAAUd,EAAEP,OAAOW,KAAMU,GAE7BV,KAAKW,MAAQX,KAAKY,QAAQD,MAE1BX,KAAKE,IAAIW,MAAMC,QAAQC,QAAQ,eAC/Bf,KAAKE,IAAIW,MAAMG,UAAYhB,KAE3BA,KAAKiB,UAGPA,OAAQ,WACN,GAAIC,IACFC,QAASnB,KAAKmB,SAGZC,EAAOpB,KAEPqB,EAAeC,OAAOC,KAAKvB,KAAKwB,MAAMC,IAAI,SAASC,EAAKC,EAAOC,GACjE,GAAY,WAARF,EACJ,MAAOA,GAAM,KAAON,EAAKI,KAAKE,GAAKG,SAClCC,KAAK,KAaR,OAXA9B,MAAK+B,IAAIC,KAAKhC,KAAKL,UACjBsC,QAASjC,KAAKiC,UACdZ,aAAcA,EACdH,SAAUA,KAGZgB,EAAE,oBAAoBF,KAAKhC,KAAK+B,KAAKI,SAAS,WAC9CnC,KAAK+B,IAAIK,KAAK,aAAaC,QAE3BrC,KAAKsC,iBAEEtC,MAGTiC,QAAS,WACP,GAAId,EAaJ,OAXInB,MAAKwB,KAAKe,QACZpB,EAAU,yDAENnB,KAAKwB,KAAKgB,OAAOX,OAAS,IAAGV,GAAW,KAE5CA,GAAW,KAGXA,EAAU,iBAAmBnB,KAAKW,MAAM8B,KAAO,8BAG1CtB,GAGTlB,WAAY,WACViC,EAAE,oBAAoBQ,YAAY,WAClC1C,KAAKE,IAAIW,MAAMC,QAAQC,QAAQ,eAC/Bf,KAAK2C,SAGPC,OAAQ,WACN5C,KAAKE,IAAI2C,SAASC,WAAW9C,OAG/BQ,QAAS,SAASV,GAEhB,GAAIsB,GAAOpB,KAGP+C,EAAW/C,KAAK+B,IAAIK,KAAK,YACzB5B,EAAUuC,EAASC,GAAG,WAErBxC,IACHR,KAAKE,IAAI2C,SAASI,YAChBC,QAASH,EACTI,KAAM,QACNC,MAAO,kBAIX,IAAIC,GAAMrD,KAAK+B,IAAIK,KAAK,aACpBkB,EAAKD,EAAIE,KAWb,OATKD,IACHtD,KAAKE,IAAI2C,SAASI,YAChBC,QAASG,EACTF,KAAM,QACNC,MAAO,+BAKN5C,GAAY8C,GAKjBtD,KAAKE,IAAIsD,QAAQC,OAAOC,KAAOJ,MAG/BtD,MAAKY,QAAQZ,KAAK2D,QAAQ,MAAM,GAAMC,KAAK,WACzCxC,EAAKR,QAAQG,QAAQ,eACrBK,EAAKnB,eAGJ4D,KAAK,SAAST,GACfhC,EAAKwB,SAEDQ,EAAMU,cAA4C,sBAA5BV,EAAMU,aAAaV,OAE3ChC,EAAKlB,IAAI2C,SAASI,YAChBC,QAASG,EACTF,KAAM,QACNC,MAAO,8BApBXpD,MAAK4C","file":"ModalConfirmView.js","sourcesContent":["/**\n * ModalConfirmView.js\n */\n\ndefine([\n  // 'app',\n  'model/account/AccountModel',\n  'text!templates/modals/modal-confirm.html'\n],\nfunction(\n  // app,\n  AccountModel,\n  ModalConfirmTemplate\n) {\n\n  return Backbone.View.extend({\n\n    'events': {\n      'click .action-confirm': 'confirm',\n      'click .action-cancel': 'closeModal',\n      'click .overlay': 'closeModal',\n      'keyup': 'keyControl'\n    },\n\n    template: _.template(ModalConfirmTemplate),\n    \n    keyControl: function(e) {\n      // e.preventDefault();\n      // esc\n      if (e.which === 27) {\n        this.closeModal();\n      // enter\n      } else if (e.which === 13) {\n        if (this.app.utils.getFocused().parentNode.className.contains('actions')) return;\n        this.confirm();\n      }\n    },\n\n    initialize: function(_options) {\n      if (_options) _.extend(this, _options);\n      \n      this.model = this.context.model;\n\n      this.app.views.appView.trigger('modalOpened');\n      this.app.views.modalView = this;\n\n      this.render();\n    },\n\n    render: function() {\n      var dialogue = {\n        message: this.message\n      };\n\n      var self = this;\n\n      var data_summary = Object.keys(this.data).map(function(key, index, array) {\n        if (key === 'tenant') return;\n        return key + ': ' + self.data[key].length;\n      }).join(', ');\n\n      this.$el.html(this.template({\n        warning: this.warning(),\n        data_summary: data_summary,\n        dialogue: dialogue\n      }));\n\n      $('.modal-container').html(this.$el).addClass('visible');\n      this.$el.find('.password').focus();\n\n      this.delegateEvents();\n\n      return this;\n    },\n\n    warning: function() {\n      var message;\n\n      if (this.data.tenant) {\n        message = 'Deleting this tenant will remove them from their lease';\n\n        if (this.data.leases.length > 1) message += 's';\n\n        message += '!';\n\n      } else {\n        message = 'Deleting this ' + this.model.name + ' will also delete its data!';\n      }\n\n      return message;\n    },\n\n    closeModal: function() {\n      $('.modal-container').removeClass('visible');\n      this.app.views.appView.trigger('modalClosed');\n      this.close();\n    },\n\n    refuse: function() {\n      this.app.controls.modalShake(this);\n    },\n\n    confirm: function(e) {\n      // e.preventDefault();\n      var self = this;\n\n      // make sure all fields all filled out\n      var $confirm = this.$el.find('#confirm'),\n          confirm = $confirm.is(':checked');\n\n      if (!confirm) {\n        this.app.controls.fieldError({\n          element: $confirm,\n          type: 'error',\n          error: 'Please confirm'\n        });\n      }\n\n      var $pw = this.$el.find('.password'),\n          pw = $pw.val();\n\n      if (!pw) {\n        this.app.controls.fieldError({\n          element: $pw,\n          type: 'error',\n          error: 'Please enter your password'\n        });\n      }\n\n      // shake the modal if any fields are missing\n      if (!confirm || !pw) {\n        this.refuse();\n        return;\n      }\n\n      this.app.session.tokens.pass = pw;\n\n      // retry the original method\n      this.context[this.method](null, true).then(function() {\n        self.context.trigger('hardConfirm');\n        self.closeModal();\n\n      // incorrect password\n      }).fail(function(error) {\n        self.refuse();\n\n        if (error.responseJSON && error.responseJSON.error == 'incorrect_password') {\n          // render the error message\n          self.app.controls.fieldError({\n            element: $pw,\n            type: 'error',\n            error: 'Incorrect password'\n          });\n        }\n      });\n    }\n\n  });\n});"]}