{"version":3,"sources":["view/tables/TableUnitView.js"],"names":["define","app","UnitView","TableRowTemplate","Backbone","View","extend","_","Events","className","events","click","click .action-remove","template","initialize","_options","this","model","parentModelId","parentModel","get","on","deleteModel","render","data","toJSON","console","log","$el","attr","html","unit","viewUnit","hasClass","parent","$","removeClass","unit_id","route","router","getPath","split","check","slice","pop","navigate","join","trigger","$row","parentView","queue","push","addClass","setTimeout","remove","dialogueConfirm","user","message","controls","modalConfirm"],"mappings":"AAIAA,QACE,MACA,gBACA,6CAEF,SAASC,EAAKC,EAAUC,GAEtB,MAAOC,UAASC,KAAKC,OAAOC,EAAED,UAAWF,SAASI,QAEhDC,UAAW,MAEXC,QACEC,MAAS,WACTC,uBAAwB,mBAG1BC,SAAUN,EAAEM,SAASV,GAErBW,WAAY,SAASC,GACfA,GAAUR,EAAED,OAAOU,KAAMD,GAC7BC,KAAKC,MAAMC,cAAgBF,KAAKG,YAAYC,IAAI,OAChDJ,KAAKK,GAAG,gBAAiBL,KAAKM,YAAaN,MAC3CA,KAAKC,MAAMI,GAAG,SAAUL,KAAKO,OAAQP,MACrCA,KAAKO,UAGPA,OAAQ,WACN,GAAIC,GAAOR,KAAKC,MAAMQ,QAKtB,OAJAC,SAAQC,IAAIH,GACZR,KAAKY,IAAIC,KAAK,UAAWb,KAAKC,MAAMG,IAAI,QAExCJ,KAAKY,IAAIE,KAAKd,KAAKH,UAAWkB,KAAMP,KAC7BR,MAKTgB,SAAU,WACR,IAAIhB,KAAKY,IAAIK,SAAS,cAClBjB,KAAKY,IAAIM,SAASA,SAASD,SAAS,WAAxC,CAEAE,EAAE,2BAA2BC,YAAY,WACzC,IAAIC,GAAUrB,KAAKC,MAAMG,IAAI,OACzBkB,EAAQrC,EAAIsC,OAAOC,UAAUC,MAAM,KACnCC,EAA2B,SAAnBJ,EAAMK,OAAM,EAEnBD,IAAOJ,EAAMM,MAElB3C,EAAIsC,OAAOM,SAASP,EAAMQ,KAAK,KAAO,IAAMT,GAAWU,SAAS,MAGlEzB,YAAa,WACX,GACI0B,GAAOhC,KAAKY,GAEhBZ,MAAKiC,WAAWF,QAAQ,gBACxB/B,KAAKiC,WAAWC,MAAMC,KAAKnC,KAAKC,OAEhC+B,EAAKI,SAAS,cACdC,WAAW,WACTL,EAAKI,SAAS,cACdC,WAAW,WACTL,EAAKM,UACJ,MACF,MAGLC,gBAAiB,SAASC,GACxB,GAAIA,GAAOxC,KAAKC,MAAMG,IAAI,UACtBqC,EAAU,mCAAqCD,EAAO,GAE1DvD,GAAIyD,SAASC,aAAaF,EAAS,gBAAiBzC","file":"TableUnitView.js","sourcesContent":["/**\n * TableUnitView.js\n */\n\ndefine([\n  'app',\n  'view/UnitView',\n  'text!templates/tables/table-row-unit.html',\n],\nfunction(app, UnitView, TableRowTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'row',\n\n    events: {\n      'click': 'viewUnit',\n      'click .action-remove': 'dialogueConfirm'\n    },\n\n    template: _.template(TableRowTemplate),\n\n    initialize: function(_options) {\n      if (_options) _.extend(this, _options);\n      this.model.parentModelId = this.parentModel.get('_id');\n      this.on('confirmDelete', this.deleteModel, this);\n      this.model.on('change', this.render, this);\n      this.render();\n    },\n\n    render: function() {\n      var data = this.model.toJSON();\n      console.log(data);\n      this.$el.attr('data-id', this.model.get('_id'));\n\n      this.$el.html(this.template({ unit: data }));\n      return this;\n\n      \n    },\n\n    viewUnit: function() {\n      if (this.$el.hasClass('selected')) return;\n      if (this.$el.parent().parent().hasClass('editing')) return;\n\n      $('.tertiary .row.selected').removeClass('selected');\n      var unit_id = this.model.get('_id');\n      var route = app.router.getPath().split('/');\n      var check = route.slice(-1) == 'units';\n\n      if (!check) route.pop();\n\n      app.router.navigate(route.join('/') + '/' + unit_id, { trigger: true });\n    },\n\n    deleteModel: function() {\n      var self = this;\n      var $row = this.$el;\n\n      this.parentView.trigger('modelDeleted');\n      this.parentView.queue.push(this.model);\n\n      $row.addClass('removing-1');\n      setTimeout(function() {\n        $row.addClass('removing-2')\n        setTimeout(function() {\n          $row.remove();\n        }, 800);\n      }, 100);\n    },\n\n    dialogueConfirm: function(user) {\n      var user = this.model.get('number');\n      var message = 'Are you sure you want to delete ' + user + '?';\n\n      app.controls.modalConfirm(message, 'confirmDelete', this);\n    }\n  }));\n});"]}