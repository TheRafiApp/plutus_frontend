{"version":3,"sources":["view/account/activate/dwolla_iav.js"],"names":["define","app","OnboardingTemplate","Backbone","View","extend","className","template","_","events","click .action-next","initialize","options","this","self","user","parentView","path","session","get","utils","request","method","then","response","dwolla_data","iav_token","set","dwolla","render","fail","error","controls","handleError","$el","html","logo","templates","step","dwolla_account","primary_funding_source","configure","config","dwolla_env","iav","start","container","stylesheets","url","base_url","microDeposits","fallbackToMicroDeposits","processDwollaResponse","find","one","$","proxy","iframeLoaded","remove","data","id","_links","href","split","status","next","renderAllSet","all_set_message","nextStep"],"mappings":"AAIAA,QACE,MACA,kDACA,sCAEF,SAASC,EAAKC,GAEZ,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,SACXC,SAAUC,EAAED,SAASL,GAErBO,QACEC,qBAAsB,YAIxBC,WAAY,SAASC,GACfA,GAASJ,EAAEH,OAAOQ,KAAMD,EAC5B,IAAIE,GAAOD,IAEXA,MAAKE,KAAOF,KAAKG,WAAWD,IAE5B,IAAIE,EAKAA,GAJAhB,EAAIiB,QAAQC,IAAI,aACbN,KAAKE,KAAKI,IAAI,iBAGV,cAFAN,KAAKE,KAAKI,IAAI,QAAU,WAK1BN,KAAKE,KAAKI,IAAI,QAAU,oBAIjClB,EAAImB,MAAMC,SACRJ,KAAMA,EACNK,OAAQ,QACPC,KAAK,SAASC,GAEf,GAAIC,GAAcX,EAAKC,KAAKI,IAAI,aAChCM,GAAYC,UAAYF,EACxBV,EAAKE,WAAWD,KAAKY,KACnBC,OAAQH,IAGVX,EAAKe,WACJC,KAAK,SAASC,GACf9B,EAAI+B,SAASC,YAAYF,MAI7BF,OAAQ,WACN,GAAIf,GAAOD,IAEXA,MAAKqB,IAAIC,KAAKtB,KAAKN,UACjB6B,KAAMnC,EAAIoC,UAAUD,UAIlBvB,KAAKyB,KAAKC,gBAAkB1B,KAAKyB,KAAKC,eAAeC,sBAKzD,IAAId,GAAYb,KAAKE,KAAKI,IAAI,mBA4B9B,OA1BAS,QAAOa,UAAUxC,EAAIyC,OAAOC,YAC5Bf,OAAOgB,IAAIC,MAAMnB,GACfoB,UAAW,gBACXC,aACE,iDACA9C,EAAI+C,IAAIC,SAAW,yBAErBC,eAAe,EACfC,yBAAyB,GACxB,SAASpB,EAAOP,GAGbA,EACFV,EAAKsC,sBAAsB5B,GAGlBO,GACT9B,EAAI+B,SAASC,YAAYF,KAK7BlB,KAAKqB,IAAImB,KAAK,UACXC,IAAI,OAAQC,EAAEC,MAAM3C,KAAK4C,aAAc5C,OAGnCA,MAGT4C,aAAc,WACZ5C,KAAKqB,IAAImB,KAAK,oBAAoBK,UAGpCN,sBAAuB,SAAS5B,GAC9B,GAOIP,GAPAH,EAAOD,KACP8C,GACFC,GAAIpC,EAASqC,OAAO,kBAAkBC,KAAKC,MAAM,oBAAoB,GACrEC,OAAQxC,EAASqC,OAAO,yBAA2B,aAAe,YAKhEvC,EAAS,MACTrB,GAAIiB,QAAQC,IAAI,cAElBF,EAAO,0BACPK,EAAS,OAGTL,EAAOH,EAAKC,KAAKI,IAAI,QAAU,6BAGjClB,EAAImB,MAAMC,SACRJ,KAAMA,EACNK,OAAQA,EACRqC,KAAMA,IACLpC,KAAK,SAASoC,GAEK,eAAhBA,EAAKK,OAITlD,EAAKE,WAAWD,KAAKY,IAAIgC,GACzB7C,EAAKE,WAAWiD,UAKpBC,aAAc,WACZ,GAAIC,GAAkB,+CACtBA,IAAmB,uEACnBA,GAAmB,+EAEnBtD,KAAKqB,IAAImB,KAAK,kBAAkBlB,KAAKgC,IAGvCC,SAAU,WACRvD,KAAKG,WAAWiD","file":"dwolla_iav.js","sourcesContent":["/**\n * account/onboarding/dwolla_iav.js\n */\n\ndefine([\n  'app',\n  'text!templates/account/activate/dwolla_iav.html',\n  'https://cdn.dwolla.com/1/dwolla.js',\n],\nfunction(app, OnboardingTemplate) {\n\n  return Backbone.View.extend({\n\n    className: 'dwolla',\n    template: _.template(OnboardingTemplate),\n\n    events: {\n      'click .action-next': 'nextStep',\n      // 'load iframe': 'loaded'\n    },\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n      var self = this;\n\n      this.user = this.parentView.user;\n\n      var path;\n      if (app.session.get('logged_in')) {\n        if (!this.user.get('status.active')) {\n          path = this.user.get('role') + 's/dwolla';\n        } else {\n          path = 'account/iav';\n        }\n      } else {\n        path = this.user.get('role') + 's/activate/dwolla';\n      }\n\n      // get IAV token\n      app.utils.request({\n        path: path,\n        method: 'GET'\n      }).then(function(response) {\n\n        var dwolla_data = self.user.get('dwolla') || {};\n        dwolla_data.iav_token = response;\n        self.parentView.user.set({\n          dwolla: dwolla_data\n        });\n\n        self.render();\n      }).fail(function(error) {\n        app.controls.handleError(error);\n      });\n    },\n\n    render: function() {\n      var self = this;\n\n      this.$el.html(this.template({\n        logo: app.templates.logo()\n      }));\n      \n      // check if the user has already done this step\n      if (this.step.dwolla_account && this.step.dwolla_account.primary_funding_source) {\n        // return this.renderAllSet();\n      }\n\n      // init dwolla.js\n      var iav_token = this.user.get('dwolla.iav_token');\n\n      dwolla.configure(app.config.dwolla_env);\n      dwolla.iav.start(iav_token, {\n        container: 'iav-container',\n        stylesheets: [\n          'https://fonts.googleapis.com/css?family=Roboto',\n          app.url.base_url + '/css/dwolla_style.css'\n        ],\n        microDeposits: false,\n        fallbackToMicroDeposits: true\n      }, function(error, response) {\n\n        // IAV successful\n        if (response) {\n          self.processDwollaResponse(response);\n\n        //  IAV failed\n        } else if (error) {\n          app.controls.handleError(error);\n        }\n      });\n\n      // hide loader once iframe is loaded\n      this.$el.find('iframe')\n        .one('load', $.proxy(this.iframeLoaded, this));\n        // .on('error', $.proxy(this.iframeError, this));\n      \n      return this;\n    },\n\n    iframeLoaded: function() {\n      this.$el.find('.overlay.loading').remove();\n    },\n\n    processDwollaResponse: function(response) {\n      var self = this;\n      var data = {\n        id: response._links['funding-source'].href.split('funding-sources/')[1], // id\n        status: response._links['verify-micro-deposits'] ? 'unverified' : 'verified'\n      };\n\n\n      var path;\n      var method = 'POST';\n      if (app.session.get('logged_in')) {\n        // if already active, just \n        path = 'account/funding_sources';\n        method = 'PUT';\n      } else {\n        // if activating, set primary\n        path = self.user.get('role') + 's/activate/funding_sources';\n      }\n\n      app.utils.request({\n        path: path,\n        method: method,\n        data: data\n      }).then(function(data) {\n        \n        if (data.status === 'unverified') {\n          // TODO: tell the user they will have to do microdeposits!!\n        }\n\n        self.parentView.user.set(data);\n        self.parentView.next();\n        \n      });\n    },\n\n    renderAllSet: function() {\n      var all_set_message = '<div class=\"form-model\"><h1>Bank Account</h1>';\n      all_set_message += '<div class=\"all-set\">You\\'ve already linked your bank account!</div>';\n      all_set_message += '<div class=\"pad-20\"><a href=\"#\" class=\"btn action-next\">Next</a></div></div>';\n      \n      this.$el.find('#iav-container').html(all_set_message);\n    },\n\n    nextStep: function() {\n      this.parentView.next();\n    }\n\n  });\n});"]}