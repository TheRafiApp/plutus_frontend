{"version":3,"sources":["view/account/Contact.js"],"names":["define","app","ModalContactView","AccountContactTemplate","Backbone","View","extend","_","Events","className","events","click .action-change-phone","click .action-change-email","click .action-remove-phone","click .action-remove-email","click .action-verify-phone","click .action-verify-email","template","initialize","options","this","self","model","parentModel","refresh","fetch","then","render","on","removePhone","removeEmail","user","toJSON","$el","html","delegateEvents","phone_pretty","find","mask","changePhone","action","get","modal","method","context","changeEmail","verifyPhone","verifyEmail","promptRemovePhone","alerts","error","target","message","controls","modalConfirm","promptRemoveEmail","destroy","views","currentView","fail"],"mappings":"AAIAA,QACE,MACA,+BACA,+CAEF,SAASC,EAAKC,EAAkBC,GAE9B,MAAOC,UAASC,KAAKC,OAAOC,EAAED,UAAWF,SAASI,QAEhDC,UAAW,0BAEXC,QACEC,6BAA8B,cAC9BC,6BAA8B,cAC9BC,6BAA8B,oBAC9BC,6BAA8B,oBAC9BC,6BAA8B,cAC9BC,6BAA8B,eAGhCC,SAAUV,EAAEU,SAASd,GAErBe,WAAY,SAASC,GACfA,GAASZ,EAAED,OAAOc,KAAMD,EAE5B,IAAIE,GAAOD,IAEXA,MAAKE,MAAQF,KAAKG,YAEdH,KAAKI,QACPJ,KAAKE,MAAMG,QAAQC,KAAK,WACtBL,EAAKM,WAGPP,KAAKO,UAITA,OAAQ,WACNP,KAAKQ,GAAG,qBAAsBR,KAAKS,YAAaT,MAChDA,KAAKQ,GAAG,qBAAsBR,KAAKU,YAAaV,KAEhD,IAAIW,GAAOX,KAAKE,MAAMU,QAUtB,OARAZ,MAAKa,IAAIC,KAAKd,KAAKH,UACjBc,KAAMA,KAGRX,KAAKe,iBAEDJ,EAAKK,cAAchB,KAAKa,IAAII,KAAK,eAAeC,KAAK,kBAElDlB,MAGTmB,YAAa,WACX,GAAIC,GAAS,OACTpB,KAAKE,MAAMmB,IAAI,UAAYrB,KAAKE,MAAMmB,IAAI,2BAAyBD,EAAS,QAEhFpB,KAAKsB,MAAQ,GAAIxC,IACfsC,OAAQA,EACRG,OAAQ,QACRC,QAASxB,QAIbyB,YAAa,WACX,GAAIL,GAAS,OACTpB,KAAKE,MAAMmB,IAAI,UAAYrB,KAAKE,MAAMmB,IAAI,2BAAyBD,EAAS,QAEhFpB,KAAKsB,MAAQ,GAAIxC,IACfsC,OAAQA,EACRG,OAAQ,QACRC,QAASxB,QAIb0B,YAAa,WACX1B,KAAKsB,MAAQ,GAAIxC,IACfsC,OAAQ,SACRG,OAAQ,QACRC,QAASxB,QAIb2B,YAAa,WACX3B,KAAKsB,MAAQ,GAAIxC,IACfsC,OAAQ,SACRG,OAAQ,QACRC,QAASxB,QAIb4B,kBAAmB,WACjB,IAAK5B,KAAKE,MAAMmB,IAAI,SAElB,WADAxC,GAAIgD,OAAOC,MAAM,6CAGnB,IAAIC,GAAS/B,KAAKE,MAAMmB,IAAI,gBACxBW,EAAU,sDAAwDD,EAAS,GAE/ElD,GAAIoD,SAASC,aAAaF,EAAS,qBAAsBhC,OAG3DmC,kBAAmB,WACjB,IAAKnC,KAAKE,MAAMmB,IAAI,SAElB,WADAxC,GAAIgD,OAAOC,MAAM,6CAGnB,IAAIC,GAAS/B,KAAKE,MAAMmB,IAAI,SACxBW,EAAU,uDAAyDD,EAAS,GAEhFlD,GAAIoD,SAASC,aAAaF,EAAS,qBAAsBhC,OAG3DS,YAAa,WAEXT,KAAKE,MAAMH,QAAQqB,OAAS,QAC5BpB,KAAKE,MAAMkC,UAAU9B,KAAK,WACxBzB,EAAIwD,MAAMC,YAAYxC,eACrByC,KAAK,WACN1D,EAAIgD,OAAOC,MAAM,yCAIrBpB,YAAa,WAEXV,KAAKE,MAAMH,QAAQqB,OAAS,QAC5BpB,KAAKE,MAAMkC,UAAU9B,KAAK,WACxBzB,EAAIwD,MAAMC,YAAYxC,eACrByC,KAAK,WACN1D,EAAIgD,OAAOC,MAAM","file":"Contact.js","sourcesContent":["/**\n * account/Contact.js\n */\n\ndefine([\n  'app',\n  'view/modals/ModalContactView',\n  'text!templates/account/account-contact.html'\n],\nfunction(app, ModalContactView, AccountContactTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'account account-payment',\n\n    events: {\n      'click .action-change-phone': 'changePhone',\n      'click .action-change-email': 'changeEmail',\n      'click .action-remove-phone': 'promptRemovePhone',\n      'click .action-remove-email': 'promptRemoveEmail',\n      'click .action-verify-phone': 'verifyPhone',\n      'click .action-verify-email': 'verifyEmail',\n    },\n\n    template: _.template(AccountContactTemplate),\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n\n      var self = this;\n\n      this.model = this.parentModel;\n\n      if (this.refresh) {\n        this.model.fetch().then(function() {\n          self.render();\n        });\n      } else {\n        this.render();\n      }\n    },\n\n    render: function() {\n      this.on('confirmRemovePhone', this.removePhone, this);\n      this.on('confirmRemoveEmail', this.removeEmail, this);\n\n      var user = this.model.toJSON();\n\n      this.$el.html(this.template({\n        user: user\n      }));\n\n      this.delegateEvents();\n\n      if (user.phone_pretty) this.$el.find('.phone-data').mask('(000) 000-0000');\n\n      return this;\n    },\n\n    changePhone: function() {\n      var action = 'add';\n      if (this.model.get('phone') || this.model.get('authentication.phone')) action = 'edit';\n\n      this.modal = new ModalContactView({\n        action: action,\n        method: 'phone',\n        context: this,\n      });\n    },\n\n    changeEmail: function() {\n      var action = 'add';\n      if (this.model.get('email') || this.model.get('authentication.email')) action = 'edit';\n\n      this.modal = new ModalContactView({\n        action: action,\n        method: 'email',\n        context: this\n      });\n    },\n\n    verifyPhone: function() {\n      this.modal = new ModalContactView({\n        action: 'verify',\n        method: 'phone',\n        context: this,\n      });\n    },\n\n    verifyEmail: function() {\n      this.modal = new ModalContactView({\n        action: 'verify',\n        method: 'email',\n        context: this,\n      });\n    },\n\n    promptRemovePhone: function() {\n      if (!this.model.get('email')) {\n        app.alerts.error('You must have at least one contact method.');\n        return;\n      }\n      var target = this.model.get('phone_pretty');\n      var message = 'Are you sure you want to remove your phone number: ' + target + '?';\n\n      app.controls.modalConfirm(message, 'confirmRemovePhone', this);\n    },\n\n    promptRemoveEmail: function() {\n      if (!this.model.get('phone')) {\n        app.alerts.error('You must have at least one contact method.');\n        return;\n      }\n      var target = this.model.get('email');\n      var message = 'Are you sure you want to remove your email address: ' + target + '?';\n\n      app.controls.modalConfirm(message, 'confirmRemoveEmail', this);\n    },\n\n    removePhone: function() {\n      var self = this;\n      this.model.options.action = 'phone';\n      this.model.destroy().then(function() {\n        app.views.currentView.initialize();\n      }).fail(function() {\n        app.alerts.error('Unable to delete your phone number');\n      });\n    },\n\n    removeEmail: function() {\n      var self = this;\n      this.model.options.action = 'email';\n      this.model.destroy().then(function() {\n        app.views.currentView.initialize();\n      }).fail(function() {\n        app.alerts.error('Unable to delete your email address');\n      });\n    }\n\n  }));\n});"]}