{"version":3,"sources":["view/account/Login.js"],"names":["define","app","LoginTemplate","Backbone","View","extend","_","Events","className","events","click .action-login","change #remember-me","submit form.begin","submit form.end","submit form.reset-code","submit form.reset-token","initialize","this","on","showLogin","showForgot","showReset","sendToken","saveToken","render","logged_in","session","get","template","user","utils","stash","getItem","pw","$el","html","logo","templates","$","removeClass","controls","renderPasswordFields","toggleRemember","find","mask","translation","Z","pattern","close","validateContact","string","phone","email","validate","alerts","error","loginRequest","e","preventDefault","removeItem","key","username","val","valid","value","loginData","password","errors","k","parent","addClass","push","capitalize","length","join","rememberForget","login","event","is","setItem","$forgot_form","removeAttr","prop","focus","showForgot2","attr","submitForgot","self","forgotData","postPassword","then","message","success","fail","handleError","submitCode","code","trim","toUpperCase","putPassword","response","submitReset","validatePassword","resetData","verifyLogin","submitResetToken","token","pc","fieldError","element","Validation","patterns","test","messages","confirm","tokenData","url","query_string","trigger","router","navigate","replace","window","location","search","slice"],"mappings":"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","file":"Login.js","sourcesContent":["/**\n * LoginView.js\n */\n\ndefine([\n  'app',\n  'text!templates/account/login.html'\n],\nfunction(app, LoginTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'login-container',\n\n    events: {\n      'click .action-login': 'loginRequest',\n      'change #remember-me': 'toggleRemember',\n      'submit form.begin': 'submitForgot',\n      'submit form.end': 'submitCode',\n      'submit form.reset-code': 'submitReset',\n      'submit form.reset-token': 'submitResetToken',\n    },\n\n    initialize: function() {\n      this.on('showLogin', this.showLogin, this);\n      this.on('showForgot', this.showForgot, this);\n      this.on('showReset', this.showReset, this);\n      this.on('sendToken', this.sendToken, this);\n      this.on('saveToken', this.saveToken, this);\n\n      return this.render();\n    },\n\n    render: function() {\n      var logged_in = app.session.get('logged_in');\n\n      if (!logged_in) {\n        this.template = _.template(LoginTemplate);\n        var user = app.utils.stash.getItem('last-login') || '';\n        var pw = app.utils.stash.getItem('last-pw') || '';\n        \n        this.$el.html(this.template({\n          logo: app.templates.logo(),\n          user: user,\n          pw: pw\n        }));\n\n        $('body').removeClass('loading');\n\n        app.controls.renderPasswordFields(this);\n\n        this.toggleRemember();\n\n        // mask code\n        this.$el.find('.code').mask('ZZZâ€“ZZZ', {\n          'translation': {\n            Z: {\n              pattern: /[A-Za-z0-9]/\n            },\n          }\n        });\n      \n        return this.$el;\n      } else {\n        this.close();\n      }\n    },\n\n    validateContact: function(string) {\n      delete this.phone;\n      delete this.email;\n\n      var validate = app.utils.validateContact(string, true);\n\n      if (validate.phone) {\n        this.phone = validate.phone;\n        return 'phone';\n      } else if (validate.email) {\n        this.email = validate.email;\n        return 'email';\n      } else {\n        app.alerts.error('Please enter a valid email or phone');\n        return false;\n      }\n    },\n\n    // Send the login request\n    loginRequest: function(e) {\n      e.preventDefault();\n\n      app.utils.stash.removeItem('activation');\n\n      var username = this.$el.find('.login .username').val();\n\n      var valid = this.validateContact(username);\n      var key;\n      var value = this.email || this.phone;\n\n      if (!valid) {\n        return false;\n      } else {\n        key = valid;\n      }\n\n      var loginData = {\n        'password': $('.login .password').val()\n      };\n\n      loginData[key] = value;\n\n      var errors = [];\n\n      for (var k in loginData) {\n        if (!loginData[k]) {\n          $('.' + k).parent().addClass('error');\n          errors.push(app.utils.capitalize(k));\n        }\n      }\n\n      if (errors.length > 0) {\n        if (errors.length > 1) {\n          app.alerts.error('You have omitted required fields: ' + errors.join(', '));\n        } else {\n          app.alerts.error(errors + ' is a required field');\n        }\n        return false;\n      }\n\n      this.rememberForget();\n\n      app.controls.login(loginData);\n\n    },\n\n    // Remember me checkbox\n    toggleRemember: function(event) {\n      if (this.$el.find('#remember-me').is(':checked')) {\n        app.utils.stash.setItem('remember-me', true);\n      } else {\n        app.utils.stash.setItem('remember-me', false);\n      }\n      this.rememberForget();\n    },\n\n    rememberForget: function() {\n      if (app.utils.stash.getItem('remember-me') == 'true') {\n        var user = this.$el.find('.username').val();\n        var pw = this.$el.find('.password').val();\n        app.utils.stash.setItem('last-login', user);\n        app.utils.stash.setItem('last-pw', pw);\n      } else {\n        app.utils.stash.removeItem('last-login');\n        app.utils.stash.removeItem('last-pw');\n      }\n    },\n\n    // Show the login form\n    showLogin: function() {\n      this.$el.find('.login').addClass('visible');\n      this.$el.find('.forgot, .reset').removeClass('forgot-sent visible');\n    },\n\n    // Show Step 1 of forgot password\n    showForgot: function() {\n      this.$el.find('.login, .reset').removeClass('visible');\n      var $forgot_form = this.$el.find('.forgot').removeClass('end').addClass('visible begin');\n      $forgot_form.find('.reset-code .code').removeAttr('required');\n      $forgot_form.find('.username').prop('disabled', false);\n\n      // focus on next field\n      this.$el.find('.username').focus();\n    },\n\n    // Show Step 2 of forgot password\n    showForgot2: function() {\n      var $forgot_form = this.$el.find('.forgot').addClass('end').removeClass('begin');\n      $forgot_form.find('.reset-code .code').val('').attr('required', 'required').focus();\n      $forgot_form.find('.username').prop('disabled', true);\n\n      // focus on next field\n      this.$el.find('.code').focus();\n    },\n\n    // Show Step 3 of forgot password\n    showReset: function() {\n      this.$el.find('.login').removeClass('visible');\n      var $forgot_form = this.$el.find('.forgot').removeClass('visible end').addClass('begin');\n      $forgot_form.find('.reset-code .code').removeAttr('required');\n      var $reset_form = this.$el.find('.reset').addClass('visible');\n\n      // focus on next field\n      this.$el.find('.password').focus();\n    },\n\n    // Send form 1\n    submitForgot: function(e) {\n      e.preventDefault();\n\n      var self = this;\n\n      var username = this.$el.find('.forgot .username').val();\n      var valid = this.validateContact(username);\n      var key;\n      var value = this.email || this.phone;\n\n      if (!valid) {\n        return false;\n      } else {\n        key = valid;\n      }\n\n      var forgotData = {};\n\n      forgotData[key] = value;\n\n      app.session.postPassword(forgotData).then(function() {\n\n        var message = 'Thanks, we sent you a';\n        message += key === 'phone' ? ' text message' : 'n email';\n        message += ' with a verification code.';\n\n        app.alerts.success(message);\n        self.showForgot2();\n\n      }).fail(function(error) {\n        app.controls.handleError(error);\n      });\n    },\n\n    // Send form 2\n    submitCode: function(e) {\n      e.preventDefault();\n\n      var self = this;\n      var value = this.email || this.phone;\n      var key = this.email ? 'email' : 'phone';\n\n      var code = $.trim(this.$el.find('.forgot .code').val().toUpperCase());\n\n      if (code.length !== 7) {\n        app.alerts.error('Please enter a valid code.');\n        return false;\n      }\n\n      var forgotData = {\n        'code': code\n      };\n\n      forgotData[key] = value;\n\n      app.session.putPassword(forgotData).then(function(response) {\n        app.alerts.success('Please enter a new password');\n\n        self.code = code;\n\n        self.showReset();\n      }).fail(function() {\n        app.alerts.error('The code you have entered is invalid.');\n      });\n    },\n\n    // Send form 3\n    submitReset: function(e) {\n      e.preventDefault();\n\n      var self = this;\n      var value = this.email || this.phone;\n      var key = this.email ? 'email' : 'phone';\n      var code = this.code;\n\n      if (!this.validatePassword()) return;\n\n      var password = this.$el.find('.reset .password').val();\n\n      var resetData = {\n        'password': password,\n        'code': code\n      };\n\n      resetData[key] = value;\n\n      this.verifyLogin(resetData);\n    },\n\n    // Submit Token to reset\n    submitResetToken: function(e) {\n      e.preventDefault();\n\n      var self = this;\n      var value = this.email || this.phone;\n      var key = this.email ? 'email' : 'phone';\n      var token = this.token;\n\n      if (!this.validatePassword()) return;\n\n      var password = this.$el.find('.reset .password').val();\n\n      var resetData = {\n        'password': password,\n        'token': token\n      };\n\n      resetData[key] = value;\n\n      this.verifyLogin(resetData);\n    },\n\n    validatePassword: function(e) {\n      var pw = this.$el.find('.reset .password');\n      var pc = this.$el.find('.reset .password-confirm');\n\n      var errors = false;\n\n      if (!pw.val()) {\n        app.controls.fieldError({\n          element: pw,\n          error: 'Password is required'\n        });\n        errors = true;\n      }\n\n      if (errors) return false;\n\n      if (!Backbone.Validation.patterns.password.test(pw.val())) {\n        app.controls.fieldError({\n          element: pw,\n          error: Backbone.Validation.messages.password\n        });\n        errors = true;\n      }\n      \n      if (pc.val() !== pw.val()) {\n        app.controls.fieldError({\n          element: pc,\n          error: 'Passwords must match'\n        });\n        errors = true;\n      }\n\n      if (!pc.val()) {\n        app.controls.fieldError({\n          element: pc,\n          error: 'Please confirm your password'\n        });\n        errors = true;\n      }\n\n      if (errors) {\n        return false;\n      } else {\n        this.confirm(e);\n      }\n    },\n\n    sendToken: function() {\n      var self = this;\n\n      var tokenData = {\n        token: app.url.query_string()\n      };\n\n      // send token and trigger events\n      app.session.putPassword(tokenData).then(function(response) {\n        self.user = response;\n        self.trigger('showReset');\n        self.trigger('saveToken');\n      }).fail(function() {\n        app.alerts.error('Your reset link has expired');\n        app.router.navigate('/', { trigger: true, replace: true });\n      });\n    },\n\n    // Save that reset token to this view\n    saveToken: function() {\n      this.token = window.location.search.slice(1);\n      this.$el.find('.reset').removeClass('reset-code').addClass('reset-token');\n    },\n\n    verifyLogin: function(resetData) {\n      var self = this;\n      app.session.putPassword(resetData).then(function(response) {\n        app.alerts.success('Password succesfully reset!');\n        var value;\n        var key;\n\n        if (response) {\n          value = response.email || response.phone;\n          key = response.email ? 'email' : 'phone';\n        } else {\n          value = self.email || self.phone;\n          key = self.email ? 'email' : 'phone';\n        }\n\n        var loginData = {\n          'password': resetData.password\n        };\n\n        loginData[key] = value;\n\n        // Log the user in\n        app.controls.login(loginData);\n\n      }).fail(function(error) {\n        app.controls.handleError(error);\n      });\n    }\n\n  }));\n});"]}