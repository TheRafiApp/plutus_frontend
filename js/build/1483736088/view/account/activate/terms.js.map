{"version":3,"sources":["view/account/activate/terms.js"],"names":["define","app","ModalTermsView","Template","Backbone","View","extend","className","template","_","events","click .action-terms","click .action-next","initialize","options","this","render","user","parentView","$el","html","logo","templates","name","get","terms_accepted","nextStep","self","$agreement","find","is","controls","fieldError","element","error","path","session","utils","request","method","then","next","termsModal","modal","action","eventName","context"],"mappings":"AAIAA,QACE,MACA,6BACA,8CAEF,SAASC,EAAKC,EAAgBC,GAE5B,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,QACXC,SAAUC,EAAED,SAASL,GAErBO,QACEC,sBAAuB,aACvBC,qBAAsB,YAGxBC,WAAY,SAASC,GACfA,GAASL,EAAEH,OAAOS,KAAMD,GAC5BC,KAAKC,UAGPA,OAAQ,WACN,GAEIC,GAAOF,KAAKG,WAAWD,IAQ3B,OANAF,MAAKI,IAAIC,KAAKL,KAAKP,UACjBa,KAAMpB,EAAIqB,UAAUD,OACpBE,KAAMN,EAAKO,IAAI,cACfC,eAAgBR,EAAKO,IAAI,qBAGpBT,MAGTW,SAAU,WACR,GAAIC,GAAOZ,KAEPa,EAAab,KAAKI,IAAIU,KAAK,UAC3BJ,EAAiBG,EAAWE,GAAG,WACnC,KAAKL,EAMH,WAJAxB,GAAI8B,SAASC,YACXC,QAASL,EACTM,MAAO,oCAKX,IAAIC,GAAOlC,EAAImC,QAAQZ,IAAI,aAAe,QAAU,gBAEpDvB,GAAIoC,MAAMC,SACRH,KAAM,SAAWA,EACjBI,OAAQ,SACPC,KAAK,WACNb,EAAKT,WAAWuB,UAIpBC,WAAY,WACV3B,KAAK4B,MAAQ,GAAIzC,IACf0C,OAAQ,QAERC,UAAW,cACXC,QAAS/B","file":"terms.js","sourcesContent":["/**\n * account/activate/terms.js\n */\n\ndefine([\n  'app',\n  'view/modals/ModalTermsView',\n  'text!templates/account/activate/terms.html',\n],\nfunction(app, ModalTermsView, Template) {\n\n  return Backbone.View.extend({\n\n    className: 'terms',\n    template: _.template(Template),\n\n    events: {\n      'click .action-terms': 'termsModal',\n      'click .action-next': 'nextStep'\n    },\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n      this.render();\n    },\n\n    render: function() {\n      var self = this;\n\n      var user = this.parentView.user;\n\n      this.$el.html(this.template({\n        logo: app.templates.logo(),\n        name: user.get('first_name'),\n        terms_accepted: user.get('terms_accepted')\n      }));\n\n      return this;\n    },\n\n    nextStep: function() {\n      var self = this;\n\n      var $agreement = this.$el.find('#agree');\n      var terms_accepted = $agreement.is(':checked');\n      if (!terms_accepted) {\n\n        app.controls.fieldError({\n          element: $agreement,\n          error: 'Please agree to the terms of use'\n        });\n        return;\n      }\n\n      var path = app.session.get('logged_in') ? 'terms' : 'activate/terms';\n\n      app.utils.request({\n        path: 'users/' + path,\n        method: 'POST'\n      }).then(function() {\n        self.parentView.next();\n      });\n    },\n\n    termsModal: function() {\n      this.modal = new ModalTermsView({\n        action: 'agree',\n        // model: this.model,\n        eventName: 'termsAgreed',\n        context: this\n      });\n    }\n\n  });\n});"]}