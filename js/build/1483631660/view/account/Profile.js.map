{"version":3,"sources":["view/account/Profile.js"],"names":["define","app","ModalPasswordView","ModalConfirmView","AccountProfileTemplate","Backbone","View","extend","_","Events","className","events","click .action-edit","click .action-cancel","click .action-save","click .action-delete","click .action-change-pw","template","initialize","options","this","self","model","parentModel","Validation","bind","on","changePassword","saveUser","deleteUser","fetch","then","render","data","toJSON","$el","html","user","delegateEvents","toggleEdit","$btn","find","$actions","parent","$form","hasClass","removeClass","prop","addClass","cancelEdit","promptSave","console","log","utils","validate","message","get","controls","modalConfirm","promptDelete","modalHardConfirm","$","data_array","serializeArray","userData","map","x","save","alerts","success","destroy","router","navigate","trigger","replace","error","warn","arguments","promptPassword","modal","eventName","context","views","currentView"],"mappings":"AAIAA,QACE,MAEA,gCACA,+BACA,+CAEF,SAASC,EAAKC,EAAmBC,EAAkBC,GAEjD,MAAOC,UAASC,KAAKC,OAAOC,EAAED,UAAWF,SAASI,QAEhDC,UAAW,0BAEXC,QACEC,qBAAsB,aACtBC,uBAAwB,aACxBC,qBAAsB,aACtBC,uBAAwB,eACxBC,0BAA2B,kBAG7BC,SAAUT,EAAES,SAASb,GAErBc,WAAY,SAASC,GACfA,GAASX,EAAED,OAAOa,KAAMD,EAE5B,IAAIE,GAAOD,IAEXA,MAAKE,MAAQF,KAAKG,YAElBlB,SAASmB,WAAWC,KAAKL,MAEzBA,KAAKM,GAAG,iBAAkBN,KAAKO,eAAgBP,MAC/CA,KAAKM,GAAG,cAAeN,KAAKQ,SAAUR,MACtCA,KAAKM,GAAG,gBAAiBN,KAAKS,WAAYT,MAE1CA,KAAKE,MAAMQ,QAAQC,KAAK,WACtBV,EAAKW,YAKTA,OAAQ,WACN,GAAIC,GAAOb,KAAKE,MAAMY,QAOtB,OALAd,MAAKe,IAAIC,KAAKhB,KAAKH,UACjBoB,KAAMJ,KAGRb,KAAKkB,iBACElB,MAGTmB,WAAY,WACV,GAAIC,GAAOpB,KAAKe,IAAIM,KAAK,gBACrBC,EAAWF,EAAKG,SAASA,SACzBC,EAAQxB,KAAKe,IAAIM,KAAK,kBAEtBG,GAAMC,SAAS,YACjBH,EAASI,YAAY,WACrBF,EAAME,YAAY,WAClBF,EAAMH,KAAK,SAASM,KAAK,YAAY,KAErCL,EAASM,SAAS,WAClBJ,EAAMI,SAAS,WACfJ,EAAMH,KAAK,SAASM,KAAK,YAAY,KAIzCE,WAAY,WACV7B,KAAKY,UAGPkB,WAAY,WAGV,GAFAC,QAAQC,IAAI,cACZD,QAAQC,IAAInD,EAAIoD,MAAMC,SAASlC,QAC1BnB,EAAIoD,MAAMC,SAASlC,MAAO,OAAO,CAEtC,IAEImC,IAFOnC,KAAKE,MAAMkC,IAAI,aAEZ,qFAEdvD,GAAIwD,SAASC,aAAaH,EAAS,cAAenC,OAGpDuC,aAAc,WAEZ,GAAItB,GAAOjB,KAAKE,MAAMkC,IAAI,cACtBD,EAAUlB,EAAO,iDAErBpC,GAAIwD,SAASG,iBAAiBL,EAAS,iBAAkBnC,OAG3DQ,SAAU,WACR,IAAK3B,EAAIoD,MAAMC,SAASlC,MAAO,OAAO,CAEtC,IAAIC,GAAOD,KACPwB,EAAQiB,EAAE,eACVC,EAAalB,EAAMmB,iBACnBC,IAEJH,GAAEI,IAAIH,EAAY,SAASI,GACzBF,EAASE,EAAQ,MAAKA,EAAS,QAIjC9C,KAAKE,MAAM6C,KAAKH,GAAUjC,KAAK,WAC7BV,EAAKW,UACJ,WACDX,EAAKW,SACL/B,EAAImE,OAAOC,QAAQ,4BAIvBxC,WAAY,WACVT,KAAKE,MAAMgD,SACTD,QAAS,WACPpE,EAAIsE,OAAOC,SAAS,SAAWC,SAAS,EAAMC,SAAS,KAEzDC,MAAO,WACLxB,QAAQyB,KAAKC,eAKnBC,eAAgB,WACd1D,KAAK2D,MAAQ,GAAI7E,IACf8E,UAAW,iBACXC,QAAS7D,QAIbO,eAAgB,WACd1B,EAAIiF,MAAMC,YAAYjE","file":"Profile.js","sourcesContent":["/**\n * account/Profile.js\n */\n\ndefine([\n  'app',\n  // 'model/session/AccountModel',\n  'view/modals/ModalPasswordView',\n  'view/modals/ModalConfirmView',\n  'text!templates/account/account-profile.html'\n],\nfunction(app, ModalPasswordView, ModalConfirmView, AccountProfileTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'account account-general',\n\n    events: {\n      'click .action-edit': 'toggleEdit',\n      'click .action-cancel': 'cancelEdit',\n      'click .action-save': 'promptSave',\n      'click .action-delete': 'promptDelete',\n      'click .action-change-pw': 'promptPassword'\n    },\n\n    template: _.template(AccountProfileTemplate),\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n\n      var self = this;\n\n      this.model = this.parentModel;\n\n      Backbone.Validation.bind(this);\n\n      this.on('changePassword', this.changePassword, this);\n      this.on('confirmSave', this.saveUser, this);\n      this.on('confirmDelete', this.deleteUser, this);\n      \n      this.model.fetch().then(function() {\n        self.render();\n      });\n\n    },\n\n    render: function() {\n      var data = this.model.toJSON();\n\n      this.$el.html(this.template({ \n        user: data\n      }));\n\n      this.delegateEvents();\n      return this;\n    },\n\n    toggleEdit: function() {\n      var $btn = this.$el.find('.action-edit');\n      var $actions = $btn.parent().parent();\n      var $form = this.$el.find('form.form-model');\n\n      if ($form.hasClass('editing')) {\n        $actions.removeClass('editing');\n        $form.removeClass('editing');\n        $form.find('input').prop('disabled', true);\n      } else {\n        $actions.addClass('editing');\n        $form.addClass('editing');\n        $form.find('input').prop('disabled', false);\n      }\n    },\n\n    cancelEdit: function() {\n      this.render();\n    },\n\n    promptSave: function() {\n      console.log('promptSave')\n      console.log(app.utils.validate(this));\n      if (!app.utils.validate(this)) return false;\n\n      var user = this.model.get('full_name');\n      // var message = 'You have made changes to ' + user + '. Are you sure you want to save your changes?';\n      var message = 'You have made changes to your profile. Are you sure you want to save your changes?';\n\n      app.controls.modalConfirm(message, 'confirmSave', this);\n    },\n\n    promptDelete: function() {\n\n      var user = this.model.get('first_name');\n      var message = user + ', are you sure you want to delete your account?';\n\n      app.controls.modalHardConfirm(message, 'accountDeleted', this);\n    },\n\n    saveUser: function() {\n      if (!app.utils.validate(this)) return false;\n\n      var self = this;\n      var $form = $('.form-model');\n      var data_array = $form.serializeArray();\n      var userData = {};\n\n      $.map(data_array, function(x){\n        userData[x['name']] = x['value'];\n      });\n\n      // Save to server\n      this.model.save(userData).then(function() {\n        self.render();\n      }, function() {\n        self.render();\n        app.alerts.success('No changes were made.');\n      });\n    },\n\n    deleteUser: function() {\n      this.model.destroy({\n        success: function() {\n          app.router.navigate('users', { trigger: true, replace: true });\n        },\n        error: function() {\n          console.warn(arguments);\n        }\n      });\n    },\n\n    promptPassword: function() {\n      this.modal = new ModalPasswordView({\n        eventName: 'changePassword',\n        context: this\n      });\n    },\n\n    changePassword: function() {\n      app.views.currentView.initialize();\n    }\n  }));\n});"]}