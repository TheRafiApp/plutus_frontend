{"version":3,"sources":["view/account/activate/password.js"],"names":["define","app","Template","Backbone","View","extend","className","template","_","events","click .action-next","initialize","options","this","render","console","log","step","$el","html","logo","templates","controls","renderPasswordFields","validate","pw","find","pc","errors","val","fieldError","element","error","Validation","patterns","password","test","messages","confirm","self","user","parentView","login","email","phone","data","session","setPassword","then","utils","stash","setItem","next","fail","warn"],"mappings":"AAIAA,QACE,MACA,iDAEF,SAASC,EAAKC,GAEZ,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,WACXC,SAAUC,EAAED,SAASL,GAErBO,QACEC,qBAAsB,YAGxBC,WAAY,SAASC,GACfA,GAASJ,EAAEH,OAAOQ,KAAMD,GAC5BC,KAAKC,UAGPA,OAAQ,WAWN,MARAC,SAAQC,IAAIH,KAAKI,MAEjBJ,KAAKK,IAAIC,KAAKN,KAAKN,UACjBa,KAAMnB,EAAIoB,UAAUD,UAGtBnB,EAAIqB,SAASC,qBAAqBV,MAE3BA,MAGTW,SAAU,WACR,GAAIC,GAAKZ,KAAKK,IAAIQ,KAAK,aACnBC,EAAKd,KAAKK,IAAIQ,KAAK,qBAEnBE,GAAS,CAWb,OATKH,GAAGI,QAEN5B,EAAIqB,SAASQ,YACXC,QAASN,EACTO,MAAO,yBAETJ,GAAS,IAGPA,IAECzB,SAAS8B,WAAWC,SAASC,SAASC,KAAKX,EAAGI,SACjD5B,EAAIqB,SAASQ,YACXC,QAASN,EACTO,MAAO7B,SAAS8B,WAAWI,SAASF,WAEtCP,GAAS,GAGPD,EAAGE,QAAUJ,EAAGI,QAElB5B,EAAIqB,SAASQ,YACXC,QAASJ,EACTK,MAAO,yBAETJ,GAAS,GAGND,EAAGE,QAEN5B,EAAIqB,SAASQ,YACXC,QAASJ,EACTK,MAAO,iCAETJ,GAAS,IAGPA,OAGFf,MAAKyB,QAAQb,EAAGI,SAIpBS,QAAS,SAASH,GAChB,GAAII,GAAO1B,KACP2B,EAAO3B,KAAK4B,WAAWD,KACvBE,EAAQF,EAAKG,OAASH,EAAKI,MAC3BC,GACFV,SAAUA,EAEZlC,GAAI6C,QAAQC,YAAYF,GAAMG,KAAK,WAGjC/C,EAAIgD,MAAMC,MAAMC,QAAQ,aAAcT,GACtCzC,EAAIgD,MAAMC,MAAMC,QAAQ,UAAWhB,GAEnCI,EAAKE,WAAWW,SACfC,KAAK,SAASrB,GACfjB,QAAQuC,KAAKtB","file":"password.js","sourcesContent":["/**\n * account/onboarding/password.js\n */\n\ndefine([\n  'app',\n  'text!templates/account/activate/password.html',\n],\nfunction(app, Template) {\n\n  return Backbone.View.extend({\n\n    className: 'password',\n    template: _.template(Template),\n\n    events: {\n      'click .action-next': 'validate'\n    },\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n      this.render();\n    },\n\n    render: function() {\n      var self = this;\n\n      console.log(this.step)\n\n      this.$el.html(this.template({\n        logo: app.templates.logo()\n      }));\n\n      app.controls.renderPasswordFields(this);\n\n      return this;\n    },\n\n    validate: function() {\n      var pw = this.$el.find('.password');\n      var pc = this.$el.find('.password-confirm');\n\n      var errors = false;\n\n      if (!pw.val()) {\n        // pw.parent().addClass('has-error').find('.help-text').text('Password is required');\n        app.controls.fieldError({\n          element: pw,\n          error: 'Password is required'\n        });\n        errors = true;\n      }\n\n      if (errors) return false;\n\n      if (!Backbone.Validation.patterns.password.test(pw.val())) {\n        app.controls.fieldError({\n          element: pw,\n          error: Backbone.Validation.messages.password\n        });\n        errors = true;\n      }\n      \n      if (pc.val() !== pw.val()) {\n        // pc.parent().addClass('has-error').find('.help-text').text('Passwords must match');\n        app.controls.fieldError({\n          element: pc,\n          error: 'Passwords must match'\n        });\n        errors = true;\n      }\n\n      if (!pc.val()) {\n        // pc.parent().addClass('has-error').find('.help-text').text('Please confirm your password');\n        app.controls.fieldError({\n          element: pc,\n          error: 'Please confirm your password'\n        });\n        errors = true;\n      }\n\n      if (errors) {\n        return false;\n      } else {\n        this.confirm(pw.val());\n      }\n    },\n\n    confirm: function(password) {\n      var self = this;\n      var user = this.parentView.user;\n      var login = user.email || user.phone;\n      var data = {\n        password: password\n      };\n      app.session.setPassword(data).then(function() {\n        // self.parentView.password = password;\n        // if successful, save login for later\n        app.utils.stash.setItem('last-login', login);\n        app.utils.stash.setItem('last-pw', password);\n\n        self.parentView.next();\n      }).fail(function(error) {\n        console.warn(error);\n      });\n    }\n\n  });\n});"]}