{"version":3,"sources":["view/cards/lease.js"],"names":["define","app","LeaseModel","LeaseCardTemplate","Backbone","View","extend","_","Events","className","events","click","click .action-edit-lease","click .action-renew-lease","click .action-delete-lease","template","initialize","options","this","model","data","render","on","deleteModel","state","start_date","get","end_date","today","moment","utc","$el","html","lease","toJSON","tenants","prettyMoney","utils","editLease","e","preventDefault","stopPropagation","parentView","renewLease","promptDelete","end","start","format","target","message","controls","modalConfirm","event","override","self","promise","$","Deferred","destroy","then","resolve","fail","error","handleError","reject","viewLease","hasClass","id","router","navigate","trigger"],"mappings":"AAIAA,QACE,MACA,0BACA,mCAEF,SAASC,EAAKC,EAAYC,GAExB,MAAOC,UAASC,KAAKC,OAAOC,EAAED,UAAWF,SAASI,QAEhDC,UAAW,oCAEXC,QACEC,MAAS,YACTC,2BAA4B,YAC5BC,4BAA6B,aAC7BC,6BAA8B,gBAGhCC,SAAUR,EAAEQ,SAASZ,GAErBa,WAAY,SAASC,GACnBV,EAAED,OAAOY,KAAMD,GAEfC,KAAKC,MAAQ,GAAIjB,GAAWgB,KAAKE,MACjCF,KAAKG,UAGPA,OAAQ,WACNH,KAAKI,GAAG,gBAAiBJ,KAAKK,YAAaL,KAE3C,IAAIM,GAAQ,OACRC,EAAaP,KAAKC,MAAMO,IAAI,gBAC5BC,EAAWT,KAAKC,MAAMO,IAAI,cAC1BE,EAAQC,OAAOC,KAenB,OAbIL,GAAaG,GAASA,EAAQD,EAChCH,EAAQ,SACCC,EAAaG,IACtBJ,EAAQ,UAGVN,KAAKa,IAAIC,KAAKd,KAAKH,UACjBkB,MAAOf,KAAKC,MAAMe,SAClBV,MAAOA,EACPW,QAASjB,KAAKiB,QACdC,YAAanC,EAAIoC,MAAMD,eAGlBlB,MAGToB,UAAW,SAASC,GAClBA,EAAEC,iBACFD,EAAEE,kBACFvB,KAAKwB,WAAWJ,UAAUpB,OAG5ByB,WAAY,SAASJ,GACnBA,EAAEC,iBACFD,EAAEE,kBACFvB,KAAKwB,WAAWC,WAAWzB,OAG7B0B,aAAc,WACZ,GAEIC,GAFAC,EAAQjB,OAAOC,IAAIZ,KAAKC,MAAMO,IAAI,eAAeqB,OAAO,cACxDpB,EAAWT,KAAKC,MAAMO,IAAI,WAG1BC,KAAUkB,EAAMhB,OAAOC,MAAMiB,OAAO,cAExC,IAAIC,GAASF,EAAQ,OAASD,GAAO,KACjCI,EAAU,mCAAqCD,EAAS,GAE5D/C,GAAIiD,SAASC,aAAaF,EAAS,gBAAiB/B,OAGtDK,YAAa,SAAS6B,EAAOC,GAC3B,GAAIC,GAAOpC,KACPqC,EAAUC,EAAEC,UAWhB,OATAvC,MAAKC,MAAMuC,UAAUC,KAAK,WAExB,MADAL,GAAKZ,WAAW1B,aACTuC,EAAQK,YAEdC,KAAK,SAASC,GAEf,MADKT,IAAUpD,EAAIiD,SAASa,YAAYD,EAAO,KAAMR,EAAM,eACpDC,EAAQS,OAAOF,KAGjBP,GAGTU,UAAW,SAAS1B,GAClB,IAAKiB,EAAEjB,EAAES,QAAQkB,SAAS,uBAAwB,CAChD,GAAIC,GAAKjD,KAAKC,MAAMO,IAAI,MACxBzB,GAAImE,OAAOC,SAAS,UAAYF,GAAMG,SAAS","file":"lease.js","sourcesContent":["/**\n * cards/lease.js\n */\n\ndefine([\n  'app',\n  'model/leases/LeaseModel',\n  'text!templates/cards/lease.html',\n],\nfunction(app, LeaseModel, LeaseCardTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'lease grid__col grid__col--1-of-1', \n\n    events: {\n      'click': 'viewLease',\n      'click .action-edit-lease': 'editLease',\n      'click .action-renew-lease': 'renewLease',\n      'click .action-delete-lease': 'promptDelete'\n    },\n\n    template: _.template(LeaseCardTemplate),\n\n    initialize: function(options) {\n      _.extend(this, options);\n\n      this.model = new LeaseModel(this.data);\n      this.render();\n    },\n\n    render: function() {\n      this.on('confirmDelete', this.deleteModel, this);\n\n      var state = 'past';\n      var start_date = this.model.get('start_moment');\n      var end_date = this.model.get('end_moment');\n      var today = moment.utc();\n\n      if (start_date < today && today < end_date) {\n        state = 'active';\n      } else if (start_date > today) {\n        state = 'future';\n      }\n\n      this.$el.html(this.template({ \n        lease: this.model.toJSON(),\n        state: state,\n        tenants: this.tenants,\n        prettyMoney: app.utils.prettyMoney\n      }));\n      \n      return this;\n    },\n\n    editLease: function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.parentView.editLease(this);\n    },\n\n    renewLease: function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.parentView.renewLease(this);\n    },\n\n    promptDelete: function() {\n      var start = moment.utc(this.model.get('start_date')).format('MM/DD/YYYY');\n      var end_date = this.model.get('end_date');\n      var end;\n\n      if (end_date) end = moment.utc().format('MM/DD/YYYY');\n\n      var target = start + ' – ' + (end || '∞');\n      var message = 'Are you sure you want to delete ' + target + '?';\n\n      app.controls.modalConfirm(message, 'confirmDelete', this);\n    },\n    \n    deleteModel: function(event, override) {\n      var self = this;\n      var promise = $.Deferred();\n\n      this.model.destroy().then(function() {\n        self.parentView.initialize();\n        return promise.resolve();\n\n      }).fail(function(error) {\n        if (!override) app.controls.handleError(error, null, self, 'deleteModel');\n        return promise.reject(error);\n      });\n\n      return promise;\n    },\n\n    viewLease: function(e) {\n      if (!$(e.target).hasClass('action-delete-lease')) {\n        var id = this.model.get('_id');\n        app.router.navigate('leases/' + id, { trigger: true });\n      }\n      \n    }\n\n  }));\n});"]}