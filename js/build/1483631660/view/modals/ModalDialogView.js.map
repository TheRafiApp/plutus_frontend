{"version":3,"sources":["view/modals/ModalDialogView.js"],"names":["define","Backbone","ModalDialogTemplate","View","extend","events","keyup","click .action-confirm","click .action-cancel","click .overlay","keyControl","e","preventDefault","which","this","closeModal","app","utils","getFocused","parentNode","className","contains","confirm","template","_","initialize","_options","views","appView","trigger","modalView","render","eventName","$el","html","dialog","model","$","addClass","find","focus","removeClass","close","context"],"mappings":"AAIAA,QACE,WACA,2CAEF,SACEC,EACAC,GAGA,MAAOD,GAASE,KAAKC,QAEnBC,QACEC,MAAS,aACTC,wBAAyB,UACzBC,uBAAwB,aACxBC,iBAAkB,cAGpBC,WAAY,SAASC,GAGnB,GAFAA,EAAEC,iBAEc,KAAZD,EAAEE,MACJC,KAAKC,iBAEA,IAAgB,KAAZJ,EAAEE,MAAc,CACzB,GAAIC,KAAKE,IAAIC,MAAMC,aAAaC,WAAWC,UAAUC,SAAS,WAAY,MAC1EP,MAAKQ,YAITC,SAAUC,EAAED,SAASrB,GAErBuB,WAAY,SAASC,GACfA,GAAUF,EAAEpB,OAAOU,KAAMY,GAG7BZ,KAAKE,IAAIW,MAAMC,SAAWd,KAAKE,IAAIW,MAAMC,QAAQC,QAAQ,eACzDf,KAAKE,IAAIW,MAAMG,UAAYhB,MAG7BiB,OAAQ,WASN,MANKjB,MAAKkB,YAAWlB,KAAKkB,UAAY,WAEtClB,KAAKmB,IAAIC,KAAKpB,KAAKS,UAAWY,OAAQrB,KAAKsB,SAC3CC,EAAE,oBAAoBH,KAAKpB,KAAKmB,KAAKK,SAAS,WAC9CxB,KAAKmB,IAAIM,KAAK,mBAAmBC,QAE1B1B,MAGTC,WAAY,WACVsB,EAAE,oBAAoBI,YAAY,WAClC3B,KAAKE,IAAIW,MAAMC,SAAWd,KAAKE,IAAIW,MAAMC,QAAQC,QAAQ,eACzDf,KAAK4B,SAGPpB,QAAS,WACPR,KAAK6B,QAAQd,QAAQf,KAAKkB,WAC1BlB,KAAKC","file":"ModalDialogView.js","sourcesContent":["/**\n * ModalDialogView.js\n */\n\ndefine([\n  'backbone',\n  'text!templates/modals/modal-dialog.html'\n],\nfunction(\n  Backbone, \n  ModalDialogTemplate\n){\n\n  return Backbone.View.extend({\n\n    'events': {\n      'keyup': 'keyControl',\n      'click .action-confirm': 'confirm',\n      'click .action-cancel': 'closeModal',\n      'click .overlay': 'closeModal',\n    },\n\n    keyControl: function(e) {\n      e.preventDefault();\n      // esc\n      if (e.which === 27) {\n        this.closeModal();\n      // enter\n      } else if (e.which === 13) {\n        if (this.app.utils.getFocused().parentNode.className.contains('actions')) return;\n        this.confirm();\n      }\n    },\n\n    template: _.template(ModalDialogTemplate),\n    \n    initialize: function(_options) {\n      if (_options) _.extend(this, _options);\n\n      // this modal is now used in activation, before AppView is rendered\n      this.app.views.appView && this.app.views.appView.trigger('modalOpened');\n      this.app.views.modalView = this;\n    },\n\n    render: function() {\n      var self = this;\n\n      if (!this.eventName) this.eventName = 'confirm';\n\n      this.$el.html(this.template({ dialog: this.model }));\n      $('.modal-container').html(this.$el).addClass('visible');\n      this.$el.find('.action-confirm').focus();\n\n      return this;\n    },\n\n    closeModal: function() {\n      $('.modal-container').removeClass('visible');\n      this.app.views.appView && this.app.views.appView.trigger('modalClosed');\n      this.close();\n    },\n\n    confirm: function() {\n      this.context.trigger(this.eventName);\n      this.closeModal();\n    }\n\n  });\n});"]}