{"version":3,"sources":["view/LeaseView.js"],"names":["define","app","UserCardView","ModalLeaseView","ModalBillView","TenantModel","PropertyModel","LeaseModel","LeaseTemplate","ChargeTemplate","HeaderTemplate","Backbone","View","extend","className","events","click .action-add-bill","click .action-edit","click .action-save","click .action-delete","click .action-close","template","_","template_container","options","edit","delete","initialize","this","self","model","_id","fetch","then","render","on","leaseEdited","deleteModel","leases","get","property","console","warn","data","toJSON","header_info","$el","html","header","find","lease","tenants","each","tenant","tenantModel","tenant_card","append","charges","recurring","length","forEach","charge","type","charge_template","utils","capitalize","amount","prettyMoney","description","date","moment","utc","format","remove","scheduled","$","views","currentView","selected","addClass","removeClass","promptDelete","target","message","controls","modalConfirm","saveModel","$form","data_array","serializeArray","formData","map","x","save","router","navigate","trigger","alerts","success","event","override","promise","Deferred","destroy","route","getRoute","resolve","fail","error","handleError","reject","hideTertiary","addLease","modal","action","unit","context","eventName","editLease","view","renewLease","addBill","unit_id","property_id"],"mappings":"AAIAA,QACE,MACA,kBACA,6BACA,4BACA,0BACA,iCACA,0BACA,mCACA,uCACA,qDAEF,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,wBAEXC,QACEC,yBAA0B,UAC1BC,qBAAsB,YACtBC,qBAAsB,aACtBC,uBAAwB,eACxBC,sBAAuB,gBAGzBC,SAAUC,EAAED,SAASb,GACrBe,mBAAoBD,EAAED,SAASX,GAE/Bc,SACEC,MAAM,EACNC,QAAQ,GAGVC,WAAY,SAASH,GACnBF,EAAET,OAAOe,KAAMJ,EACf,IAAIK,GAAOD,IAEXA,MAAKE,MAAQ,GAAIvB,IAAawB,IAAKH,KAAKG,MAIxCH,KAAKE,MAAME,QAAQC,KAAK,WACtBJ,EAAKK,YAITA,OAAQ,WACN,GAAIL,GAAOD,IAEXA,MAAKO,GAAG,cAAeP,KAAKQ,YAAaR,MACzCA,KAAKO,GAAG,gBAAiBP,KAAKS,YAAaT,MAE3CA,KAAKU,OAASV,KAAKE,MAAMS,IAAI,eAC7BX,KAAKY,SAAW,GAAIlC,GAAcsB,KAAKE,MAAMS,IAAI,aAEjDE,QAAQC,KAAKd,KAAKE,MAElB,IAAIa,GAAOf,KAAKE,MAAMc,SAElBC,GACFf,MAAOF,KAAKE,MAAMS,IAAI,SAGxBX,MAAKkB,IAAIC,KAAKnB,KAAKL,oBACjByB,OAAQH,EACRrB,QAASI,KAAKJ,WAGhBI,KAAKkB,IAAIG,KAAK,aAAaF,KAAKnB,KAAKP,UAAW6B,MAAOP,IAEvD,IAAIQ,GAAUvB,KAAKE,MAAMS,IAAI,UAE7BjB,GAAE8B,KAAKD,EAAS,SAASE,GACvB,GAAIC,GAAc,GAAIjD,GAAYgD,GAC9BE,EAAc,GAAIrD,IAAeyC,KAAMW,EAAYV,UACvDf,GAAKiB,IAAIG,KAAK,SAASO,OAAOD,EAAYT,MAG5C,IAAIW,GAAU7B,KAAKE,MAAMS,IAAI,UA0D7B,OAxDIkB,GAAQC,WAAaD,EAAQC,UAAUC,OAAS,EAElDF,EAAQC,UAAUE,QAAQ,SAASC,GACjC,GAAmB,QAAfA,EAAOC,KAAgB,OAAO,CAClC,IAAIC,GAAkBzC,EAAED,SAASZ,GAE7BqD,EAAO7D,EAAI+D,MAAMC,WAAWJ,EAAOC,MAEnCnB,GACFuB,OAAQjE,EAAI+D,MAAMG,YAAYN,EAAOK,QACrCJ,KAAMA,EACNM,YAAaP,EAAOO,YACpBC,KAAMC,OAAOC,IAAIV,EAAOQ,MAAMG,OAAO,cAGvC3C,GAAKiB,IAAIG,KAAK,cAAcO,OAAOO,GACjCF,OAAQlB,OAKZf,KAAKkB,IAAIG,KAAK,cAAcwB,SAG1BhB,EAAQiB,WAAajB,EAAQiB,UAAUf,OAAS,EAElDF,EAAQiB,UAAUd,QAAQ,SAASC,GACjC,GAEIC,GAFAC,EAAkBzC,EAAED,SAASZ,EAI/BqD,GADiB,eAAfD,EAAOC,KACF,cACiB,cAAfD,EAAOC,KACT,aAEA7D,EAAI+D,MAAMC,WAAWJ,EAAOC,KAGrC,IAAInB,IACFuB,OAAQjE,EAAI+D,MAAMG,YAAYN,EAAOK,QACrCJ,KAAMA,EACNO,KAAMC,OAAOC,IAAIV,EAAOQ,MAAMG,OAAO,cAGvC3C,GAAKiB,IAAIG,KAAK,cAAcO,OAAOO,GACjCF,OAAQlB,OAKZf,KAAKkB,IAAIG,KAAK,cAAcwB,SAG9BE,EAAE,iBAAmB1E,EAAI2E,MAAMC,YAAYC,SAAW,MAAMC,SAAS,YACrEJ,EAAE,aAAaK,YAAY,WAEpBpD,MAgCTqD,aAAc,WACZ,GAAIC,GAAStD,KAAKE,MAAMS,IAAI,SACxB4C,EAAU,mCAAqCD,EAAS,GAE5DjF,GAAImF,SAASC,aAAaF,EAAS,gBAAiBvD,OAGtD0D,UAAW,WACT,GACIC,GAAQZ,EAAE,eACVa,EAAaD,EAAME,iBACnBC,IAEJf,GAAEgB,IAAIH,EAAY,SAASI,GACzBF,EAASE,EAAQ,MAAKA,EAAS,QAIjChE,KAAKE,MAAM+D,KAAKH,GAAUzD,KAAK,WAC7BhC,EAAI6F,OAAOC,SAAS,cAAgBC,SAAS,KAC5C,WACD/F,EAAI6F,OAAOC,SAAS,cAAgBC,SAAS,IAC7C/F,EAAIgG,OAAOC,QAAQ,4BAIvB7D,YAAa,SAAS8D,EAAOC,GAC3B,GAAIvE,GAAOD,KACPyE,EAAU1B,EAAE2B,UAahB,OAXA1E,MAAKE,MAAMyE,UAAUtE,KAAK,WACxB,GAAIuE,GAAQvG,EAAI6F,OAAOW,UACvBxG,GAAI6F,OAAOC,SAASS,GAASR,SAAS,IAEtCK,EAAQK,YAEPC,KAAK,SAASC,GACVR,GAAUnG,EAAImF,SAASyB,YAAYD,EAAO,KAAM/E,EAAM,eAC3DwE,EAAQS,OAAOF,KAGVP,GAGTU,aAAc,WACZ9G,EAAImF,SAAS2B,gBAGfC,SAAU,WACRpF,KAAKqF,MAAQ,GAAI9G,IACf+G,OAAQ,MACRC,KAAMvF,KAAKE,MACXU,SAAUZ,KAAKY,SACf4E,QAASxF,KACTyF,UAAW,eACX/E,OAAQV,KAAKU,UAIjBgF,UAAW,SAASC,GAClB3F,KAAKqF,MAAQ,GAAI9G,IACf+G,OAAQ,OACRC,KAAMvF,KAAKE,MACXU,SAAUZ,KAAKY,SACf4E,QAASxF,KACTyF,UAAW,cACXvF,MAAOF,KAAKE,MACZQ,OAAQV,KAAKU,UAIjBkF,WAAY,SAASD,GACnB3F,KAAKqF,MAAQ,GAAI9G,IACf+G,OAAQ,QACRC,KAAMvF,KAAKE,MACXU,SAAUZ,KAAKY,SACf4E,QAASxF,KACTyF,UAAW,eACXvF,MAAOF,KAAKE,MACZQ,OAAQV,KAAKU,UAIjBmF,QAAS,WACP,GAAIvE,GAAQtB,KAAKE,MAAMc,SACnB8E,EAAUxE,EAAMiE,KAAKpF,IACrB4F,EAAczE,EAAMV,SAAST,GAEjC,IAAI3B,IACF8G,OAAQ,MACRE,QAASxF,KACTyF,UAAW,aACXK,QAASA,EACTC,YAAaA,KAIjBvF,YAAa,WACXR,KAAKD,aACL1B,EAAI2E,MAAMC,YAAYlD","file":"LeaseView.js","sourcesContent":["/**\n * LeaseView.js\n */\n\ndefine([\n  'app',\n  'view/cards/user',\n  'view/modals/ModalLeaseView',\n  'view/modals/ModalBillView',\n  'model/users/TenantModel',\n  'model/properties/PropertyModel',\n  'model/leases/LeaseModel',\n  'text!templates/leases/lease.html',\n  'text!templates/repeaters/charge.html',\n  'text!templates/headers/header-tertiary-model.html',\n],\nfunction(\n  app, \n  UserCardView,\n  ModalLeaseView, \n  ModalBillView,\n  TenantModel, \n  PropertyModel, \n  LeaseModel, \n  LeaseTemplate,\n  ChargeTemplate,\n  HeaderTemplate\n) {\n\n  return Backbone.View.extend({\n\n    className: 'model-view lease-view',\n\n    events: {\n      'click .action-add-bill': 'addBill',\n      'click .action-edit': 'editLease',\n      'click .action-save': 'promptSave',\n      'click .action-delete': 'promptDelete',\n      'click .action-close': 'hideTertiary'\n    },\n\n    template: _.template(LeaseTemplate),\n    template_container: _.template(HeaderTemplate),\n\n    options: {\n      edit: true,\n      delete: true\n    },\n\n    initialize: function(options) {\n      _.extend(this, options);\n      var self = this;\n\n      this.model = new LeaseModel({ _id: this._id });\n\n      // Backbone.Validation.bind(this);\n\n      this.model.fetch().then(function() {\n        self.render();\n      });\n    },\n\n    render: function() {\n      var self = this;\n\n      this.on('leaseEdited', this.leaseEdited, this);\n      this.on('confirmDelete', this.deleteModel, this);\n\n      this.leases = this.model.get('unit.leases');\n      this.property = new PropertyModel(this.model.get('property'));\n\n      console.warn(this.model)\n      \n      var data = this.model.toJSON();\n\n      var header_info = {\n        model: this.model.get('lease')\n      };\n      \n      this.$el.html(this.template_container({ \n        header: header_info,\n        options: this.options\n      }));\n      \n      this.$el.find('.scroll-y').html(this.template({ lease: data }));\n\n      var tenants = this.model.get('tenants');\n\n      _.each(tenants, function(tenant) {\n        var tenantModel = new TenantModel(tenant);\n        var tenant_card = new UserCardView({ data: tenantModel.toJSON() });\n        self.$el.find('.grid').append(tenant_card.$el);\n      });\n\n      var charges = this.model.get('charges');\n\n      if (charges.recurring && charges.recurring.length > 1) {\n\n        charges.recurring.forEach(function(charge) {\n          if (charge.type == 'rent') return false;\n          var charge_template = _.template(ChargeTemplate);\n\n          var type = app.utils.capitalize(charge.type);\n\n          var data = {\n            amount: app.utils.prettyMoney(charge.amount),\n            type: type,\n            description: charge.description,\n            date: moment.utc(charge.date).format('MM/DD/YYYY')\n          };\n          \n          self.$el.find('.recurring').append(charge_template({\n            charge: data\n          }));\n        });\n\n      } else {\n        this.$el.find('.recurring').remove();\n      }\n\n      if (charges.scheduled && charges.scheduled.length > 0) {\n\n        charges.scheduled.forEach(function(charge) {\n          var charge_template = _.template(ChargeTemplate);\n\n          var type;\n          if (charge.type == 'first_month') {\n            type = 'First Month';\n          } else if (charge.type == 'last_month') {\n            type = 'Last Month';\n          } else {\n            type = app.utils.capitalize(charge.type);\n          }\n\n          var data = {\n            amount: app.utils.prettyMoney(charge.amount),\n            type: type,\n            date: moment.utc(charge.date).format('MM/DD/YYYY')\n          };\n\n          self.$el.find('.scheduled').append(charge_template({\n            charge: data\n          }));\n        });\n\n      } else {\n        this.$el.find('.scheduled').remove();\n      }\n\n      $('.row[data-id=\"' + app.views.currentView.selected + '\"]').addClass('selected');\n      $('.tertiary').removeClass('loading');\n\n      return this;\n    },\n\n    // toggleEdit: function() {\n    //   var $btn = this.$el.find('.action-edit');\n    //   var $actions = $btn.parent().parent();\n    //   var $form = this.$el.find('form.form-model');\n\n    //   if ($form.hasClass('editing')) {\n    //     $actions.removeClass('editing');\n    //     $form.removeClass('editing');\n    //     $form.find('input').prop('disabled', true);\n    //   } else {\n    //     $actions.addClass('editing');\n    //     $form.addClass('editing');\n    //     $form.find('input').prop('disabled', false);\n    //   }\n    // },\n\n    // cancelEdit: function() {\n    //   this.render();\n    // },\n\n    // promptSave: function() {\n    //   if (!app.utils.validate(this)) return false;\n\n    //   var target = 'TODO';\n    //   var message = 'You have made changes to ' + target + '. Are you sure you want to save your changes?';\n\n    //   app.controls.modalConfirm(message, 'confirmSave', this);\n    // },\n\n    promptDelete: function() {\n      var target = this.model.get('lease');\n      var message = 'Are you sure you want to delete ' + target + '?';\n\n      app.controls.modalConfirm(message, 'confirmDelete', this);\n    },\n\n    saveModel: function() {\n      var self = this;\n      var $form = $('.form-model');\n      var data_array = $form.serializeArray();\n      var formData = {};\n\n      $.map(data_array, function(x){\n        formData[x['name']] = x['value'];\n      });\n\n      // Save to server\n      this.model.save(formData).then(function() {\n        app.router.navigate('properties', { trigger: true });\n      }, function() {\n        app.router.navigate('properties', { trigger: true });\n        app.alerts.success('No changes were made.');\n      });\n    },\n\n    deleteModel: function(event, override) {\n      var self = this;\n      var promise = $.Deferred();\n\n      this.model.destroy().then(function() {\n        var route = app.router.getRoute();\n        app.router.navigate(route, { trigger: true });\n\n        promise.resolve();\n\n      }).fail(function(error) {\n        if (!override) app.controls.handleError(error, null, self, 'deleteModel');\n        promise.reject(error);\n      });\n\n      return promise;\n    },\n\n    hideTertiary: function() {\n      app.controls.hideTertiary();\n    },\n\n    addLease: function() {\n      this.modal = new ModalLeaseView({\n        action: 'add',\n        unit: this.model,\n        property: this.property,\n        context: this,\n        eventName: 'leaseCreated',\n        leases: this.leases\n      });\n    },\n\n    editLease: function(view) {\n      this.modal = new ModalLeaseView({\n        action: 'edit',\n        unit: this.model, \n        property: this.property,\n        context: this, \n        eventName: 'leaseEdited',\n        model: this.model,\n        leases: this.leases\n      });\n    },\n\n    renewLease: function(view) {\n      this.modal = new ModalLeaseView({\n        action: 'renew',\n        unit: this.model,\n        property: this.property,\n        context: this, \n        eventName: 'leaseRenewed',\n        model: this.model,\n        leases: this.leases\n      });\n    },\n\n    addBill: function() {\n      var lease = this.model.toJSON();\n      var unit_id = lease.unit._id;\n      var property_id = lease.property._id;\n\n      new ModalBillView({\n        action: 'add',\n        context: this,\n        eventName: 'modelAdded',\n        unit_id: unit_id,\n        property_id: property_id\n      });\n    },\n\n    leaseEdited: function() {\n      this.initialize();\n      app.views.currentView.initialize();\n    },\n\n    // hideTertiary: function() {\n    //   if (app.views.modelView || app.views.unitsView) app.controls.hideTertiary();\n    // },\n\n  });\n});"]}