{"version":3,"sources":["view/tables/FilterView.js"],"names":["define","app","noUiSlider","DateRangeTemplate","FilterTemplate","FiltersTemplate","Backbone","View","extend","className","events","change .filter-checkbox","click .action-clear-column","template","_","initialize","_options","this","render","type","renderDateRange","renderFilters","dateToTimestamp","moment_date","console","log","toDate","getTime","attrs","self","date_template","slider_loaded","$slider","destroy","dates","attrs_all","map","attr","moment","utc","start","end","first","min","last","max","isSame","add","$el","html","find","create","range","connect","step","format","to","input","parseInt","from","dateValues","on","values","handle","changeDates","innerHTML","filteredAttrs","hasFilters","filter_template","forEach","checked","disabled","hasField","context","filters","field","indexOf","append","id","utils","domFriendlyString","$col_header","parent","addClass","removeClass","changeFilter","event","$target","$","currentTarget","tag","push","without","$column","length","filterCollection","get","x","is","clearFilters"],"mappings":"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","file":"FilterView.js","sourcesContent":["/**\n * FilterView.js\n */\n\ndefine([\n  'app',\n  'vendor/nouislider',\n  'text!templates/repeaters/date-range.html',\n  'text!templates/repeaters/filter.html',\n  'text!templates/tables/filters.html',\n],\nfunction(app, noUiSlider, DateRangeTemplate, FilterTemplate, FiltersTemplate) {\n\n  return Backbone.View.extend({\n\n    className: 'filter',\n\n    events: {\n      'change .filter-checkbox': 'changeFilter',\n      'click .action-clear-column': 'clearFilters'\n    },\n\n    template: _.template(FiltersTemplate),\n\n    initialize: function(_options) {\n      if (_options) _.extend(this, _options);\n      this.render();\n    },\n\n    render: function() {\n      var self = this;\n\n      if (this.type == 'date_range') {\n        this.renderDateRange();\n      } else {\n        this.renderFilters();\n      }\n\n      return this;\n    },\n\n    dateToTimestamp: function(moment_date) {\n      console.log(moment_date);\n      return moment_date.toDate().getTime();\n    },\n\n    renderDateRange: function(attrs) {\n      var self = this;\n\n      this.date_template = _.template(DateRangeTemplate);\n\n      this.slider_loaded = 0;\n\n      if (this.$slider) this.$slider.destroy();\n      \n      this.dates = this.attrs_all.map(function(attr) {\n        return moment.utc(attr);\n      });\n\n      var start, end;\n\n      var first = _.min(this.dates);\n      var last = _.max(this.dates);\n\n      if (attrs) {\n        attrs = attrs.map(function(attr) {\n          return moment.utc(attr);\n        });\n        start = _.min(attrs);\n        end = _.max(attrs);\n      } else {\n        start = first;\n        end = last;\n      }\n\n      // if only one model is present, first and last are the same which is not allowed\n      if (first.isSame(last)) {\n        last = moment.utc(last).add('days', 1);\n      }\n\n      if (start.isSame(end)) {\n        end = moment.utc(end).add('days', 1);\n      }\n\n      this.$el.html(this.template());\n      this.$el.find('.filters').html(this.date_template());\n\n      var $slider = this.$el.find('.slider')[0];\n\n      console.log(this.$el.find('.slider'));\n\n      this.$slider = noUiSlider.create($slider, {\n        range: {\n          min: this.dateToTimestamp(first),\n          max: this.dateToTimestamp(last)\n        },\n        connect: true,\n        step: 24 * 60 * 60 * 1000, // day\n        start: [\n          this.dateToTimestamp(start), \n          this.dateToTimestamp(end)\n        ],\n        format: {\n          to: function(input) {\n            return parseInt(input);\n          },\n          from: function(input) {\n            return parseInt(input);\n          }\n        }\n      });\n\n      var dateValues = [\n        this.$el.find('#event-start')[0],\n        this.$el.find('#event-end')[0]\n      ];\n\n      $slider.noUiSlider.on('update', function(values, handle) {\n        // HACK: prevent event from firing until it is set up\n        self.slider_loaded++;\n        if (self.slider_loaded >= 2) self.changeDates();\n\n        // update UI\n        dateValues[handle].innerHTML = moment(+values[handle]).format('MM/DD/YYYY');\n      });\n\n    },\n\n    renderFilters: function(filteredAttrs) { // takes an optional argument used to disable fields\n      var self = this;\n      var hasFilters = false;\n\n      this.filter_template = _.template(FilterTemplate);\n\n      this.$el.html(this.template());\n\n      // console.log(this.field);\n\n      this.attrs_all.forEach(function(attr) {\n\n        // console.log(attr)\n\n        var checked = false;\n        var disabled = false;\n\n        var hasField = self.context.filters[self.field];\n\n        if (hasField && hasField.indexOf(attr + '') > -1) {\n          checked = true;\n          hasFilters = true;\n        }\n\n        if (filteredAttrs && filteredAttrs.indexOf(attr) < 0) disabled = true;\n\n        self.$el.find('.filters').append(self.filter_template({\n          attr: attr,\n          id: self.field + '--' + app.utils.domFriendlyString(attr),\n          checked: checked,\n          disabled: disabled\n        }));\n      });\n\n      var $col_header = this.context.$el.find('.header.fixed a[data-field=\"' + this.field + '\"]').parent();\n\n      if (hasFilters) {\n        $col_header.addClass('has-filters');\n      } else {\n        $col_header.removeClass('has-filters');\n      }\n\n    },\n\n    changeFilter: function(event) {\n      var $target = $(event.currentTarget);\n      var checked = $target[0].checked;\n      var tag = $target.attr('data-value');\n\n      var parentFilter = this.context.filters[this.field];\n\n      if (checked) {\n        this.context.filters[this.field].push(tag);\n      } else {\n        this.context.filters[this.field] = _.without(this.context.filters[this.field], tag);\n      }\n\n      // hack for fields that need to be sorted differently\n      var $column = this.context.$el.find('.fixed a[data-field=\"' + this.field + '\"]');\n      if ($column.length === 0) $column = this.context.$el.find('.fixed a[data-field-sort=\"' + this.field + '\"]');\n      $column = $column.parent();\n\n      if (this.context.filters[this.field].length === 0) {\n        $column.removeClass('has-filters');\n      } else {\n        $column.addClass('has-filters');\n      }\n\n      this.context.filterCollection(this.field);\n    },\n\n    changeDates: function() {\n      console.log(this.context.filters);\n      this.context.filters[this.field].dates = this.$slider.get();\n      this.$slider.get().forEach(function(x) {\n        console.log(moment(x).format('MM/DD/YYYY'))\n      });\n\n      // only filter the collection if the date panel is the active one \n      if (this.$el.is(':visible')) {\n        this.context.filterCollection(this.field);\n      }\n    },\n\n    clearFilters: function() {\n      if (this.type !== 'date_range') this.context.filters[this.field] = [];\n      \n      this.context.filterCollection();\n      if (this.type == 'date_range') {\n        this.renderDateRange();\n      } else {\n        this.renderFilters();\n      }\n      \n    }\n\n  });\n});"]}