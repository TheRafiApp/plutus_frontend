{"version":3,"sources":["view/CompanyView.js"],"names":["define","app","CompanyModel","CompanyTemplate","HeaderTemplate","Backbone","View","extend","_","Events","className","events","click .action-edit","click .action-cancel","click .action-save","click .action-delete","click .action-close","options","edit","delete","initialize","this","self","template","template_container","model","_id","fetch","then","render","on","saveModel","deleteModel","data","toJSON","header_info","get","$el","html","header","find","company","console","log","$","views","currentView","selected","addClass","removeClass","toggleEdit","$btn","$actions","parent","$form","hasClass","prop","promptSave","target","message","controls","modalConfirm","promptDelete","data_array","serializeArray","formData","map","x","save","router","navigate","trigger","fail","error","alerts","success","event","override","promise","Deferred","destroy","route","getRoute","resolve","handleError","reject","hideTertiary","modelView"],"mappings":"AAIAA,QACE,MACA,+BACA,wCACA,qDAEF,SAASC,EAAKC,EAAcC,EAAiBC,GAE3C,MAAOC,UAASC,KAAKC,OAAOC,EAAED,UAAWF,SAASI,QAEhDC,UAAW,eAEXC,QACEC,qBAAsB,aACtBC,uBAAwB,aACxBC,qBAAsB,aACtBC,uBAAwB,eACxBC,sBAAuB,gBAGzBC,SACEC,MAAM,EACNC,QAAQ,GAGVC,WAAY,SAASH,GACnBT,EAAED,OAAOc,KAAMJ,EACf,IAAIK,GAAOD,IACXA,MAAKE,SAAWf,EAAEe,SAASpB,GAC3BkB,KAAKG,mBAAqBhB,EAAEe,SAASnB,GAGrCiB,KAAKI,MAAQ,GAAIvB,IAAewB,IAAKL,KAAKK,MAE1CL,KAAKI,MAAME,QAAQC,KAAK,WACtBN,EAAKO,WAEPR,KAAKS,GAAG,cAAeT,KAAKU,UAAWV,MACvCA,KAAKS,GAAG,gBAAiBT,KAAKW,YAAaX,OAG7CQ,OAAQ,WACN,GAAII,GAAOZ,KAAKI,MAAMS,SAElBC,GACFV,MAAOJ,KAAKI,MAAMW,IAAI,QAgBxB,OAbAf,MAAKgB,IAAIC,KAAKjB,KAAKG,oBACjBe,OAAQJ,EACRlB,QAASI,KAAKJ,WAGhBI,KAAKgB,IAAIG,KAAK,aAAaF,KAAKjB,KAAKE,UAAWkB,QAASR,KAEzDS,QAAQC,IAAIC,EAAE,cAEdA,EAAE,iBAAmB3C,EAAI4C,MAAMC,YAAYC,SAAW,MAAMC,SAAS,YAErEJ,EAAE,aAAaK,YAAY,WAEpB5B,MAGT6B,WAAY,WACV,GAAIC,GAAO9B,KAAKgB,IAAIG,KAAK,gBACrBY,EAAWD,EAAKE,SAASA,SACzBC,EAAQjC,KAAKgB,IAAIG,KAAK,kBAEtBc,GAAMC,SAAS,YACjBH,EAASH,YAAY,WACrBK,EAAML,YAAY,WAClBK,EAAMd,KAAK,SAASgB,KAAK,YAAY,KAErCJ,EAASJ,SAAS,WAClBM,EAAMN,SAAS,WACfM,EAAMd,KAAK,SAASgB,KAAK,YAAY,KAIzCC,WAAY,WACV,GAAIC,GAASrC,KAAKI,MAAMW,IAAI,QACxBuB,EAAU,4BAA8BD,EAAS,+CAErDzD,GAAI2D,SAASC,aAAaF,EAAS,cAAetC,OAGpDyC,aAAc,WACZ,GAAIJ,GAASrC,KAAKI,MAAMW,IAAI,QACxBuB,EAAU,mCAAqCD,EAAS,GAE5DzD,GAAI2D,SAASC,aAAaF,EAAS,gBAAiBtC,OAGtDU,UAAW,WACT,GACIuB,GAAQV,EAAE,eACVmB,EAAaT,EAAMU,iBACnBC,IAEJrB,GAAEsB,IAAIH,EAAY,SAASI,GACzBF,EAASE,EAAQ,MAAKA,EAAS,QAIjC9C,KAAKI,MAAM2C,KAAKH,GAAUrC,KAAK,WAE7B3B,EAAIoE,OAAOC,SAAS,aAAeC,SAAS,MAC3CC,KAAK,SAASC,GACfxE,EAAIoE,OAAOC,SAAS,aAAeC,SAAS,IAC5CtE,EAAIyE,OAAOC,QAAQ,4BAIvB3C,YAAa,SAAS4C,EAAOC,GAC3B,GAAIvD,GAAOD,KACPyD,EAAUlC,EAAEmC,UAYhB,OAVA1D,MAAKI,MAAMuD,UAAUpD,KAAK,WACxB,GAAIqD,GAAQhF,EAAIoE,OAAOa,UAEvB,OADAjF,GAAIoE,OAAOC,SAASW,GAASV,SAAS,IAC/BO,EAAQK,YAEdX,KAAK,SAASC,GAEf,MADKI,IAAU5E,EAAI2D,SAASwB,YAAYX,EAAO,KAAMnD,EAAM,eACpDwD,EAAQO,OAAOZ,KAGjBK,GAGTQ,aAAc,WACRrF,EAAI4C,MAAM0C,WAAWtF,EAAI2D,SAAS0B","file":"CompanyView.js","sourcesContent":["/**\n * CompanyView.js\n */\n\ndefine([\n  'app',\n  'model/companies/CompanyModel',\n  'text!templates/companies/company.html',\n  'text!templates/headers/header-tertiary-model.html',\n],\nfunction(app, CompanyModel, CompanyTemplate, HeaderTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'company-view',\n\n    events: {\n      'click .action-edit': 'toggleEdit',\n      'click .action-cancel': 'toggleEdit',\n      'click .action-save': 'promptSave',\n      'click .action-delete': 'promptDelete',\n      'click .action-close': 'hideTertiary'\n    },\n\n    options: {\n      edit: true,\n      delete: true\n    },\n\n    initialize: function(options) {\n      _.extend(this, options);\n      var self = this;\n      this.template = _.template(CompanyTemplate);\n      this.template_container = _.template(HeaderTemplate);\n      //this.model.on('change', this.render, this);\n\n      this.model = new CompanyModel({ _id: this._id });\n\n      this.model.fetch().then(function() {\n        self.render();\n      });\n      this.on('confirmSave', this.saveModel, this);\n      this.on('confirmDelete', this.deleteModel, this);\n    },\n\n    render: function() {\n      var data = this.model.toJSON();\n\n      var header_info = {\n        model: this.model.get('name')\n      };\n\n      this.$el.html(this.template_container({ \n        header: header_info,\n        options: this.options\n      }));\n\n      this.$el.find('.scroll-y').html(this.template({ company: data }));\n\n      console.log($('.tertiary'))\n\n      $('.row[data-id=\"' + app.views.currentView.selected + '\"]').addClass('selected');\n\n      $('.tertiary').removeClass('loading');\n\n      return this;\n    },\n\n    toggleEdit: function() {\n      var $btn = this.$el.find('.action-edit');\n      var $actions = $btn.parent().parent();\n      var $form = this.$el.find('form.form-model');\n\n      if ($form.hasClass('editing')) {\n        $actions.removeClass('editing');\n        $form.removeClass('editing');\n        $form.find('input').prop('disabled', true);\n      } else {\n        $actions.addClass('editing');\n        $form.addClass('editing');\n        $form.find('input').prop('disabled', false);\n      }\n    },\n\n    promptSave: function() {\n      var target = this.model.get('name');\n      var message = 'You have made changes to ' + target + '. Are you sure you want to save your changes?';\n\n      app.controls.modalConfirm(message, 'confirmSave', this);\n    },\n\n    promptDelete: function() {\n      var target = this.model.get('name');\n      var message = 'Are you sure you want to delete ' + target + '?';\n\n      app.controls.modalConfirm(message, 'confirmDelete', this);\n    },\n\n    saveModel: function() {\n      var self = this;\n      var $form = $('.form-model');\n      var data_array = $form.serializeArray();\n      var formData = {};\n\n      $.map(data_array, function(x){\n        formData[x['name']] = x['value'];\n      });\n\n      // Save to server\n      this.model.save(formData).then(function() {\n        //self.hideTertiary();\n        app.router.navigate('companies', { trigger: true });\n      }).fail(function(error) {\n        app.router.navigate('companies', { trigger: true });\n        app.alerts.success('No changes were made.');\n      });\n    },\n\n    deleteModel: function(event, override) {\n      var self = this;\n      var promise = $.Deferred();\n\n      this.model.destroy().then(function() {\n        var route = app.router.getRoute();\n        app.router.navigate(route, { trigger: true });\n        return promise.resolve();\n\n      }).fail(function(error) {\n        if (!override) app.controls.handleError(error, null, self, 'deleteModel');\n        return promise.reject(error);\n      });\n\n      return promise;\n    },\n\n    hideTertiary: function() {\n      if (app.views.modelView) app.controls.hideTertiary();\n    }\n\n  }));\n});"]}