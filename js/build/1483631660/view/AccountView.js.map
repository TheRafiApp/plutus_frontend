{"version":3,"sources":["view/AccountView.js"],"names":["define","app","AccountProfileView","HeaderTemplate","Backbone","View","extend","className","events","click .tabs a","initialize","options","_","this","self","views","accountView","template_container","template","model","session","user","fetch","then","render","$el","html","toJSON","loadView","page","firstLoad","subPage","find","removeClass","addClass","file","utils","capitalize","get","tab","parentModel","currentTab","delegateEvents","router","navigate","trigger","replace","fail","e","toggleTab","$","currentTarget","attr"],"mappings":"AAIAA,QACE,MACA,uBACA,8CAEF,SAASC,EAAKC,EAAoBC,GAEhC,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,kBAEXC,QACEC,gBAAiB,aAInBC,WAAY,SAASC,GACfA,GAASC,EAAEN,OAAOO,KAAMF,EAE5B,IAAIG,GAAOD,IACXZ,GAAIc,MAAMC,YAAcH,KAExBA,KAAKI,mBAAqBL,EAAEM,SAASf,GAErCU,KAAKM,MAAQlB,EAAImB,QAAQC,KACzBR,KAAKM,MAAMG,QAAQC,KAAK,WACtBT,EAAKU,YAITA,OAAQ,WAMN,MALAX,MAAKY,IAAIC,KAAKb,KAAKI,oBACjBI,KAAMR,KAAKM,MAAMQ,YAEnBd,KAAKe,WAEEf,MAGTe,SAAU,WACR,GAAId,GAAOD,KACPgB,EAAO,UACPC,GAAY,CAEZjB,MAAKkB,UACPF,EAAOhB,KAAKkB,QACZD,GAAY,EACZjB,KAAKY,IAAIO,KAAK,WAAWC,YAAY,UACrCpB,KAAKY,IAAIO,KAAK,qBAAuBH,EAAO,MAAMK,SAAS,WAI7DC,KAAOlC,EAAImC,MAAMC,WAAWR,GAE5B5B,EAAImC,MAAMR,SAASU,IAAI,WAAaH,MAAMZ,KAAK,SAASlB,GACtD,GAAIkC,GAAM,GAAIlC,IACZmC,YAAa1B,EAAKK,OAGpBlB,GAAIc,MAAMC,YAAYyB,WAAaF,EAEnCzB,EAAKW,IAAIO,KAAK,0BAA0BN,KAAKa,EAAId,KACjDc,EAAIG,iBAEJzC,EAAI0C,OAAOC,SAAS,WAAaf,GAAQgB,SAAS,EAAOC,QAAShB,IAElE7B,EAAI0C,OAAOE,QAAQ,WAElBE,KAAK,SAASC,GACf/C,EAAI0C,OAAOC,SAAS,OAASC,SAAS,EAAMC,SAAS,OAIzDG,UAAW,SAASD,GAClB,GAAInB,GAAOqB,EAAEF,EAAEG,eAAeC,KAAK,WAEnCvC,MAAKkB,QAAUF,EACfhB,KAAKe","file":"AccountView.js","sourcesContent":["/**\n * AccountView.js\n */\n\ndefine([\n  'app',\n  'view/account/Profile',\n  'text!templates/headers/header-account.html'\n],\nfunction(app, AccountProfileView, HeaderTemplate) {\n\n  return Backbone.View.extend({\n\n    className: 'tabs-view panel',\n\n    events: {\n      'click .tabs a': 'toggleTab',\n      // 'mouseup .tabs a': 'preventDefault',\n    },\n\n    initialize: function(options) {\n      if (options) _.extend(this, options);\n\n      var self = this;\n      app.views.accountView = this;\n\n      this.template_container = _.template(HeaderTemplate);\n\n      this.model = app.session.user;\n      this.model.fetch().then(function() {\n        self.render();\n      });\n    },\n\n    render: function() {\n      this.$el.html(this.template_container({ \n        user: this.model.toJSON() \n      }));\n      this.loadView();\n\n      return this;\n    },\n\n    loadView: function() {\n      var self = this;\n      var page = 'profile';\n      var firstLoad = true;\n\n      if (this.subPage) {\n        page = this.subPage;\n        firstLoad = false;\n        this.$el.find('.tabs a').removeClass('active');\n        this.$el.find('.tabs a[data-tab=\"' + page + '\"]').addClass('active');\n      }\n\n      // files are case sensitive on Linux HD formatting :P\n      file = app.utils.capitalize(page);\n\n      app.utils.loadView.get('account/' + file).then(function(View) {\n        var tab = new View({\n          parentModel: self.model\n        });\n\n        app.views.accountView.currentTab = tab;\n        \n        self.$el.find('.account-view.scroll-y').html(tab.$el);\n        tab.delegateEvents();\n        // pass trigger: false to avoid the entire view from re-rendering\n        app.router.navigate('account/' + page, { trigger: false, replace: firstLoad });\n        // need to trigger the route event manually \n        app.router.trigger('route');\n\n      }).fail(function(e) {\n        app.router.navigate('404', { trigger: true, replace: true });\n      });\n    },\n\n    toggleTab: function(e) {\n      var page = $(e.currentTarget).attr('data-tab');\n      \n      this.subPage = page;\n      this.loadView();\n    }\n    \n  });\n});"]}