{"version":3,"sources":["model/leases/RentRollModel.js"],"names":["define","app","RentRollModel","Model","extend","name","displayName","urlRoot","API","defaults","today","filters","full_address","Backbone","computed","this","isNew","property","get","_","escape","address","active_lease","leases","length","date","moment","utc","forEach","lease","end_date","start_date","occupied","income","rent","income_pretty","utils","prettyMoney","start","end","add","duration","diff","months","asMonths","days","asDays"],"mappings":"AAIAA,QACE,OAEF,SAASC,GAEP,GAAIC,GAAgBD,EAAIE,MAAMC,QAE5BC,KAAM,kBACNC,YAAa,eAEbC,QAAS,WACP,MAAON,GAAIO,MAAQ,aAGrBC,UACEC,MAAO,IAGTC,SACE,QACA,gBAGFC,aAAcC,SAASC,SAAS,SAAU,WAAY,WACpD,GAAIC,KAAKC,QAAS,MAAO,EAEzB,IAAIC,GAAWF,KAAKG,IAAI,WAAa,OAAKD,GAEnCE,EAAEC,OAAOH,EAASI,QAAU,KAAON,KAAKG,IAAI,WAAa,IAFL,KAK7DI,aAAcT,SAASC,SAAS,QAAS,SAAU,WACjD,GAAIC,KAAKC,QAAS,MAAO,EACzB,IAAIO,GAASR,KAAKG,IAAI,SACtB,KAAKK,GAA4B,IAAlBA,EAAOC,OAAc,OAAO,CAE3C,IAAId,GAAQK,KAAKG,IAAI,QAEhBR,GAGHe,KAAOC,OAAOC,IAAIjB,GAFlBe,KAAOC,OAAOC,KAKhB,IAAIL,IAAe,CAenB,OAbAC,GAAOK,QAAQ,SAASC,GACtB,IAAKA,EAAMC,SAET,YADAR,EAAeO,EAGf,IAAIE,GAAaL,OAAOC,IAAIE,EAAME,YAC9BD,EAAWJ,OAAOC,IAAIE,EAAMC,SAE5BC,GAAaN,MAAQA,KAAOK,IAAUR,EAAeO,KAKtDP,IAGTU,SAAUnB,SAASC,SAAS,eAAgB,WAC1C,GAAIC,KAAKC,QAAS,MAAO,EACzB,IAAIM,GAAeP,KAAKG,IAAI,eAE5B,SAAQI,IAGVW,OAAQpB,SAASC,SAAS,eAAgB,WACxC,GAAIC,KAAKC,QAAS,OAAO,CAEzB,IAAIM,GAAeP,KAAKG,IAAI,eAC5B,OAA2B,mBAAhBI,KAEJA,EAAeA,EAAaY,MAASnB,KAAKG,IAAI,WAGvDiB,cAAetB,SAASC,SAAS,SAAU,WACzC,GAAImB,GAASlB,KAAKG,IAAI,SACtB,IAAKe,EACL,MAAOhC,GAAImC,MAAMC,YAAYJ,KAG/BT,OAAQX,SAASC,SAAS,eAAgB,WACxC,GAAIC,KAAKC,QAAS,MAAO,EACzB,IAAIM,GAAeP,KAAKG,IAAI,eAC5B,KAAKI,EAAc,MAAO,KAE1B,KAAKA,EAAaQ,SAAU,MAAO,YAEnC,IAAIQ,GAAQZ,OAAOC,IAAIL,EAAaS,YAChCQ,EAAMb,OAAOC,IAAIL,EAAaQ,UAAUU,IAAI,OAAQ,GAEpDC,EAAWf,OAAOe,SAASF,EAAIG,KAAKJ,GAExC,QACEK,OAAQF,EAASG,WACjBC,KAAMJ,EAASK,aAMrB,OAAO5C","file":"RentRollModel.js","sourcesContent":["/**\n * RentRollModel.js\n */\n\ndefine([\n  'app'\n],\nfunction(app) {\n\n  var RentRollModel = app.Model.extend({\n\n    name: 'rent roll entry',\n    displayName: 'full_address',\n\n    urlRoot: function() {\n      return app.API() + 'rentroll/';\n    },\n\n    defaults: {\n      today: '',\n    },\n\n    filters: [\n      'today',\n      'active_lease'\n    ],\n\n    full_address: Backbone.computed('number', 'property', function() {\n      if (this.isNew()) return '';\n\n      var property = this.get('property'); if (!property) return '';\n\n      return _.escape(property.address + ' #' + this.get('number') || '');\n    }),\n\n    active_lease: Backbone.computed('today', 'leases', function() {\n      if (this.isNew()) return '';\n      var leases = this.get('leases');\n      if (!leases || leases.length === 0) return false;\n\n      var today = this.get('today');\n\n      if (!today) {\n        date = moment.utc();\n      } else {\n        date = moment.utc(today);\n      }\n\n      var active_lease = false;\n\n      leases.forEach(function(lease) {\n        if (!lease.end_date) {\n          active_lease = lease;\n          return;\n        } else {\n          var start_date = moment.utc(lease.start_date);\n          var end_date = moment.utc(lease.end_date);\n\n          if (start_date < date && date < end_date) active_lease = lease;\n        }\n        \n      });\n\n      return active_lease;\n    }),\n\n    occupied: Backbone.computed('active_lease', function() {\n      if (this.isNew()) return '';\n      var active_lease = this.get('active_lease');\n      \n      return !active_lease ? false : true;\n    }),\n\n    income: Backbone.computed('active_lease', function() { \n      if (this.isNew()) return false;\n\n      var active_lease = this.get('active_lease');\n      if (typeof active_lease == 'undefined') return false;\n\n      return active_lease ? active_lease.rent : -(this.get('rent'));\n    }),\n\n    income_pretty: Backbone.computed('income', function() { \n      var income = this.get('income');\n      if (!income) return;\n      return app.utils.prettyMoney(income);\n    }),\n\n    length: Backbone.computed('active_lease', function() { \n      if (this.isNew()) return '';\n      var active_lease = this.get('active_lease');\n      if (!active_lease) return null;\n\n      if (!active_lease.end_date) return 'Indefinite';\n\n      var start = moment.utc(active_lease.start_date);\n      var end = moment.utc(active_lease.end_date).add('days', 1);\n\n      var duration = moment.duration(end.diff(start));\n\n      return {\n        months: duration.asMonths(), \n        days: duration.asDays()\n      };\n    }),\n\n  });\n\n  return RentRollModel; \n\n});"]}