{"version":3,"sources":["view/LedgerEntryView.js"],"names":["define","app","ModelView","UserCardView","TransferModel","TransferTemplate","Backbone","View","extend","className","events","click .action-reinvite","template","_","initialize","options","this","self","router","getRoute","model","_id","fetch","then","render","context","edit","delete","$el","html","source","get","find","data","destination","$","removeClass"],"mappings":"AAIAA,QACE,MACA,iBACA,kBACA,gCACA,0CAEF,SAASC,EAAKC,EAAWC,EAAcC,EAAeC,GAEpD,MAAOC,UAASC,KAAKC,QAEnBC,UAAW,YAEXC,QACEC,yBAA0B,oBAG5BC,SAAUC,EAAED,SAASP,GAErBS,WAAY,SAASC,GACnBF,EAAEL,OAAOQ,KAAMD,EACf,IAAIE,GAAOD,IACAf,GAAIiB,OAAOC,UAEtBH,MAAKI,MAAQ,GAAIhB,IAAgBiB,IAAKL,KAAKK,MAC3CL,KAAKI,MAAME,QAAQC,KAAK,WACtBN,EAAKO,YAITA,OAAQ,WAENR,KAAKd,UAAY,GAAIA,IACnBuB,QAAST,KAETD,SACEW,MAAM,EACNC,QAAQ,KAIZX,KAAKY,IAAIC,KAAKb,KAAKd,UAAU0B,IAE7B,IAAIE,GAASd,KAAKI,MAAMW,IAAI,SAExBD,IACFd,KAAKY,IAAII,KAAK,WAAWH,KAAK,GAAI1B,IAChC8B,KAAMH,IACLF,IAGL,IAAIM,GAAclB,KAAKI,MAAMW,IAAI,cAQjC,OANAf,MAAKY,IAAII,KAAK,gBAAgBH,KAAK,GAAI1B,IACrC8B,KAAMC,IACLN,KAEHO,EAAE,aAAaC,YAAY,WAEpBpB","file":"LedgerEntryView.js","sourcesContent":["/**\n * LedgerEntryView.js\n */\n\ndefine([\n  'app',\n  'view/ModelView',\n  'view/cards/user',\n  'model/transfers/TransferModel',\n  'text!templates/transfers/transfer.html'\n],\nfunction(app, ModelView, UserCardView, TransferModel, TransferTemplate) {\n\n  return Backbone.View.extend({\n\n    className: 'user-view',\n\n    events: {\n      'click .action-reinvite': 'resendInvitation'\n    },\n\n    template: _.template(TransferTemplate),\n\n    initialize: function(options) {\n      _.extend(this, options);\n      var self = this;\n      var role = app.router.getRoute();\n\n      this.model = new TransferModel({ _id: this._id });\n      this.model.fetch().then(function() {\n        self.render();\n      });\n    },\n\n    render: function() {\n\n      this.ModelView = new ModelView({\n        context: this,\n\n        options: {\n          edit: true,\n          delete: true\n        }\n      });\n\n      this.$el.html(this.ModelView.$el);\n\n      var source = this.model.get('source');\n\n      if (source) {\n        this.$el.find('.source').html(new UserCardView({\n          data: source\n        }).$el);\n      }\n\n      var destination = this.model.get('destination');\n\n      this.$el.find('.destination').html(new UserCardView({\n        data: destination\n      }).$el);\n\n      $('.tertiary').removeClass('loading');\n\n      return this;\n    }\n    \n  });\n});"]}