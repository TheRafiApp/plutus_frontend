{"version":3,"sources":["view/account/Login.js"],"names":["define","app","LoginTemplate","Backbone","View","extend","_","Events","className","events","click .action-login","change #remember-me","submit form.begin","submit form.end","submit form.reset-code","submit form.reset-token","initialize","this","on","showLogin","showForgot","showReset","saveToken","render","logged_in","session","get","template","user","utils","stash","getItem","pw","$el","html","logo","templates","$","removeClass","controls","renderPasswordFields","toggleRemember","find","mask","translation","Z","pattern","close","validateContact","string","phone","email","validate","alerts","error","loginRequest","e","preventDefault","removeItem","key","username","val","valid","value","loginData","password","errors","k","parent","addClass","push","capitalize","length","join","rememberForget","login","event","is","setItem","console","log","$forgot_form","removeAttr","prop","focus","showForgot2","attr","submitForgot","self","forgotData","postPassword","then","message","success","fail","handleError","submitCode","code","trim","toUpperCase","putPassword","submitReset","password_confirm","resetData","verifyLogin","submitResetToken","token","window","location","search","slice","response"],"mappings":"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","file":"Login.js","sourcesContent":["/**\n * LoginView.js\n */\n\ndefine([\n  'app',\n  'text!templates/account/login.html'\n],\nfunction(app, LoginTemplate) {\n\n  return Backbone.View.extend(_.extend({}, Backbone.Events, {\n\n    className: 'login-container',\n\n    events: {\n      'click .action-login': 'loginRequest',\n      'change #remember-me': 'toggleRemember',\n      'submit form.begin': 'submitForgot',\n      'submit form.end': 'submitCode',\n      'submit form.reset-code': 'submitReset',\n      'submit form.reset-token': 'submitResetToken',\n    },\n\n    initialize: function() {\n      this.on('showLogin', this.showLogin, this);\n      this.on('showForgot', this.showForgot, this);\n      this.on('showReset', this.showReset, this);\n      this.on('saveToken', this.saveToken, this);\n\n      return this.render();\n    },\n\n    render: function() {\n      var logged_in = app.session.get('logged_in');\n\n      if (!logged_in) {\n        this.template = _.template(LoginTemplate);\n        var user = app.utils.stash.getItem('last-login') || '';\n        var pw = app.utils.stash.getItem('last-pw') || '';\n        \n        this.$el.html(this.template({\n          logo: app.templates.logo(),\n          user: user,\n          pw: pw\n        }));\n\n        $('body').removeClass('loading');\n\n        app.controls.renderPasswordFields(this);\n\n        this.toggleRemember();\n\n        // mask code\n        this.$el.find('.code').mask('ZZZâ€“ZZZ', {\n          'translation': {\n            Z: {\n              pattern: /[A-Za-z0-9]/\n            },\n          }\n        });\n      \n        return this.$el;\n      } else {\n        this.close();\n      }\n    },\n\n    validateContact: function(string) {\n      delete this.phone;\n      delete this.email;\n\n      var validate = app.utils.validateContact(string, true);\n\n      if (validate.phone) {\n        this.phone = validate.phone;\n        return 'phone';\n      } else if (validate.email) {\n        this.email = validate.email;\n        return 'email';\n      } else {\n        app.alerts.error('Please enter a valid email or phone');\n        return false;\n      }\n    },\n\n    // Send the login request\n    loginRequest: function(e) {\n      e.preventDefault();\n\n      app.utils.stash.removeItem('activation');\n\n      var username = this.$el.find('.login .username').val();\n\n      var valid = this.validateContact(username);\n      var key;\n      var value = this.email || this.phone;\n\n      if (!valid) {\n        return false;\n      } else {\n        key = valid;\n      }\n\n      var loginData = {\n        'password': $('.login .password').val()\n      };\n\n      loginData[key] = value;\n\n      var errors = [];\n\n      for (var k in loginData) {\n        if (!loginData[k]) {\n          $('.' + k).parent().addClass('error');\n          errors.push(app.utils.capitalize(k));\n        }\n      }\n\n      if (errors.length > 0) {\n        if (errors.length > 1) {\n          app.alerts.error('You have omitted required fields: ' + errors.join(', '));\n        } else {\n          app.alerts.error(errors + ' is a required field');\n        }\n        return false;\n      }\n\n      this.rememberForget();\n\n      app.controls.login(loginData);\n\n    },\n\n    // Remember me checkbox\n    toggleRemember: function(event) {\n      // if (event.target.checked) {\n      if (this.$el.find('#remember-me').is(':checked')) {\n        app.utils.stash.setItem('remember-me', true);\n      } else {\n        app.utils.stash.setItem('remember-me', false);\n      }\n      this.rememberForget();\n    },\n\n    rememberForget: function() {\n      if (app.utils.stash.getItem('remember-me') == 'true') {\n        var user = this.$el.find('.username').val();\n        var pw = this.$el.find('.password').val();\n        app.utils.stash.setItem('last-login', user);\n        app.utils.stash.setItem('last-pw', pw);\n      } else {\n        app.utils.stash.removeItem('last-login');\n        app.utils.stash.removeItem('last-pw');\n      }\n    },\n\n    // Show the login form\n    showLogin: function() {\n      console.log('showLogin')\n      console.log(this.$el.find('.login'))\n      this.$el.find('.login').addClass('visible');\n      this.$el.find('.forgot, .reset').removeClass('forgot-sent visible');\n    },\n\n    // Show Step 1 of forgot password\n    showForgot: function() {\n      this.$el.find('.login, .reset').removeClass('visible');\n      var $forgot_form = this.$el.find('.forgot').removeClass('end').addClass('visible begin');\n      $forgot_form.find('.reset-code .code').removeAttr('required');\n      $forgot_form.find('.username').prop('disabled', false);\n\n      // focus on next field\n      this.$el.find('.username').focus();\n    },\n\n    // Show Step 2 of forgot password\n    showForgot2: function() {\n      var $forgot_form = this.$el.find('.forgot').addClass('end').removeClass('begin');\n      $forgot_form.find('.reset-code .code').val('').attr('required', 'required').focus();\n      $forgot_form.find('.username').prop('disabled', true);\n\n      // focus on next field\n      this.$el.find('.code').focus();\n    },\n\n    // Show Step 3 of forgot password\n    showReset: function() {\n      this.$el.find('.login').removeClass('visible');\n      var $forgot_form = this.$el.find('.forgot').removeClass('visible end').addClass('begin');\n      $forgot_form.find('.reset-code .code').removeAttr('required');\n      var $reset_form = this.$el.find('.reset').addClass('visible');\n\n      // focus on next field\n      this.$el.find('.password').focus();\n    },\n\n    // Send form 1\n    submitForgot: function(e) {\n      e.preventDefault();\n\n      var self = this;\n\n      var username = this.$el.find('.forgot .username').val();\n      var valid = this.validateContact(username);\n      var key;\n      var value = this.email || this.phone;\n\n      if (!valid) {\n        return false;\n      } else {\n        key = valid;\n      }\n\n      var forgotData = {};\n\n      forgotData[key] = value;\n\n      app.session.postPassword(forgotData).then(function() {\n\n        var message = 'Thanks, we sent you a';\n        message += key === 'phone' ? ' text message' : 'n email';\n        message += ' with a verification code.';\n\n        app.alerts.success(message);\n        self.showForgot2();\n\n      }).fail(function(error) {\n        app.controls.handleError(error);\n      });\n    },\n\n    // Send form 2\n    submitCode: function(e) {\n      e.preventDefault();\n\n      var self = this;\n      var value = this.email || this.phone;\n      var key = this.email ? 'email' : 'phone';\n\n      var code = $.trim(this.$el.find('.forgot .code').val().toUpperCase());\n\n      if (code.length !== 7) {\n        app.alerts.error('Please enter a valid code.');\n        return false;\n      }\n\n      var forgotData = {\n        'code': code\n      };\n\n      forgotData[key] = value;\n\n      app.session.putPassword(forgotData).then(function() {\n        app.alerts.success('Please enter a new password');\n\n        //self.email = email;\n        self.code = code;\n\n        self.showReset();\n      }).fail(function() {\n        app.alerts.error('The code you have entered is invalid.');\n      });\n    },\n\n    // Send form 3\n    submitReset: function(e) {\n      e.preventDefault();\n\n      var self = this;\n      var value = this.email || this.phone;\n      var key = this.email ? 'email' : 'phone';\n      var code = this.code;\n\n      var password = this.$el.find('.reset .password').val();\n      var password_confirm = this.$el.find('.reset .password-confirm').val();\n\n      if (password !== password_confirm) {\n        app.alerts.error('Passwords must match');\n        return false;\n      }\n\n      var resetData = {\n        'password': password,\n        'code': code\n      };\n\n      resetData[key] = value;\n\n      this.verifyLogin(resetData);\n    },\n\n    // Submit Token to reset\n    submitResetToken: function(e) {\n      e.preventDefault();\n\n      var self = this;\n      var value = this.email || this.phone;\n      var key = this.email ? 'email' : 'phone';\n      var token = this.token;\n\n      var password = this.$el.find('.reset .password').val();\n      var password_confirm = this.$el.find('.reset .password-confirm').val();\n\n      if (password !== password_confirm) {\n        app.alerts.error('Passwords must match');\n        return false;\n      }\n\n      var resetData = {\n        'password': password,\n        'token': token\n      };\n\n      resetData[key] = value;\n\n      this.verifyLogin(resetData);\n    },\n\n    // Save that reset token to this view\n    saveToken: function() {\n      this.token = window.location.search.slice(1);\n      this.$el.find('.reset').removeClass('reset-code').addClass('reset-token');\n    },\n\n    verifyLogin: function(resetData) {\n\n      console.log(resetData)\n\n      var self = this;\n      app.session.putPassword(resetData).then(function(response) {\n        app.alerts.success('Password succesfully reset!');\n        var value;\n        var key;\n\n        if (response) {\n          value = response.email || response.phone;\n          key = response.email ? 'email' : 'phone';\n        } else {\n          value = self.email || self.phone;\n          key = self.email ? 'email' : 'phone';\n        }\n\n        var loginData = {\n          'password': resetData.password\n        };\n\n        loginData[key] = value;\n\n        // Log the user in\n        app.controls.login(loginData);\n\n      }).fail(function(error) {\n        app.controls.handleError(error);\n      });\n    }\n\n  }));\n});"]}